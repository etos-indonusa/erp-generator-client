/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { AmimsFigureIndexDto } from '../models/amims-figure-index-dto';
import { figureIndexControllerCreate } from '../fn/figure-index/figure-index-controller-create';
import { FigureIndexControllerCreate$Params } from '../fn/figure-index/figure-index-controller-create';
import { figureIndexControllerFindAll } from '../fn/figure-index/figure-index-controller-find-all';
import { FigureIndexControllerFindAll$Params } from '../fn/figure-index/figure-index-controller-find-all';
import { figureIndexControllerFindOne } from '../fn/figure-index/figure-index-controller-find-one';
import { FigureIndexControllerFindOne$Params } from '../fn/figure-index/figure-index-controller-find-one';
import { figureIndexControllerRemove } from '../fn/figure-index/figure-index-controller-remove';
import { FigureIndexControllerRemove$Params } from '../fn/figure-index/figure-index-controller-remove';
import { figureIndexControllerUpdate } from '../fn/figure-index/figure-index-controller-update';
import { FigureIndexControllerUpdate$Params } from '../fn/figure-index/figure-index-controller-update';

@Injectable({ providedIn: 'root' })
export class FigureIndexService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `figureIndexControllerFindAll()` */
  static readonly FigureIndexControllerFindAllPath = '/amims/figure_index/figure_index';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `figureIndexControllerFindAll()` instead.
   *
   * This method doesn't expect any request body.
   */
  figureIndexControllerFindAll$Response(params?: FigureIndexControllerFindAll$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsFigureIndexDto>;
'total'?: number;
}>> {
    return figureIndexControllerFindAll(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `figureIndexControllerFindAll$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  figureIndexControllerFindAll(params?: FigureIndexControllerFindAll$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsFigureIndexDto>;
'total'?: number;
}> {
    return this.figureIndexControllerFindAll$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsFigureIndexDto>;
'total'?: number;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsFigureIndexDto>;
'total'?: number;
} => r.body)
    );
  }

  /** Path part for operation `figureIndexControllerCreate()` */
  static readonly FigureIndexControllerCreatePath = '/amims/figure_index/figure_index';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `figureIndexControllerCreate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  figureIndexControllerCreate$Response(params: FigureIndexControllerCreate$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}>> {
    return figureIndexControllerCreate(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `figureIndexControllerCreate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  figureIndexControllerCreate(params: FigureIndexControllerCreate$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}> {
    return this.figureIndexControllerCreate$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
} => r.body)
    );
  }

  /** Path part for operation `figureIndexControllerFindOne()` */
  static readonly FigureIndexControllerFindOnePath = '/amims/figure_index/figure_index/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `figureIndexControllerFindOne()` instead.
   *
   * This method doesn't expect any request body.
   */
  figureIndexControllerFindOne$Response(params: FigureIndexControllerFindOne$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}>> {
    return figureIndexControllerFindOne(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `figureIndexControllerFindOne$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  figureIndexControllerFindOne(params: FigureIndexControllerFindOne$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}> {
    return this.figureIndexControllerFindOne$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
} => r.body)
    );
  }

  /** Path part for operation `figureIndexControllerUpdate()` */
  static readonly FigureIndexControllerUpdatePath = '/amims/figure_index/figure_index/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `figureIndexControllerUpdate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  figureIndexControllerUpdate$Response(params: FigureIndexControllerUpdate$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}>> {
    return figureIndexControllerUpdate(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `figureIndexControllerUpdate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  figureIndexControllerUpdate(params: FigureIndexControllerUpdate$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}> {
    return this.figureIndexControllerUpdate$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
} => r.body)
    );
  }

  /** Path part for operation `figureIndexControllerRemove()` */
  static readonly FigureIndexControllerRemovePath = '/amims/figure_index/figure_index/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `figureIndexControllerRemove()` instead.
   *
   * This method doesn't expect any request body.
   */
  figureIndexControllerRemove$Response(params: FigureIndexControllerRemove$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}>> {
    return figureIndexControllerRemove(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `figureIndexControllerRemove$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  figureIndexControllerRemove(params: FigureIndexControllerRemove$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}> {
    return this.figureIndexControllerRemove$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsFigureIndexDto;
} => r.body)
    );
  }

}
