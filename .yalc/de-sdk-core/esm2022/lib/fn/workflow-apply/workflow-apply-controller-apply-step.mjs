/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function workflowApplyControllerApplyStep(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, workflowApplyControllerApplyStep.PATH, 'post');
    if (params) {
        rb.body(params.body, 'application/json');
    }
    return http.request(rb.build({ responseType: 'text', accept: '*/*', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r.clone({ body: undefined });
    }));
}
workflowApplyControllerApplyStep.PATH = '/auth/workflow/workflow/apply';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29ya2Zsb3ctYXBwbHktY29udHJvbGxlci1hcHBseS1zdGVwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2RrY29yZS9zcmMvbGliL2ZuL3dvcmtmbG93LWFwcGx5L3dvcmtmbG93LWFwcGx5LWNvbnRyb2xsZXItYXBwbHktc3RlcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLG1EQUFtRDtBQUVuRCxPQUFPLEVBQTJCLFlBQVksRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRTdFLE9BQU8sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBUXZELE1BQU0sVUFBVSxnQ0FBZ0MsQ0FBQyxJQUFnQixFQUFFLE9BQWUsRUFBRSxNQUErQyxFQUFFLE9BQXFCO0lBQ3hKLE1BQU0sRUFBRSxHQUFHLElBQUksY0FBYyxDQUFDLE9BQU8sRUFBRSxnQ0FBZ0MsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDdEYsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNYLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQ2pCLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FDM0QsQ0FBQyxJQUFJLENBQ0osTUFBTSxDQUFDLENBQUMsQ0FBTSxFQUEwQixFQUFFLENBQUMsQ0FBQyxZQUFZLFlBQVksQ0FBQyxFQUNyRSxHQUFHLENBQUMsQ0FBQyxDQUFvQixFQUFFLEVBQUU7UUFDM0IsT0FBUSxDQUF1QixDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsQ0FBNkIsQ0FBQztJQUN6RixDQUFDLENBQUMsQ0FDSCxDQUFDO0FBQ0osQ0FBQztBQUVELGdDQUFnQyxDQUFDLElBQUksR0FBRywrQkFBK0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogQ29kZSBnZW5lcmF0ZWQgYnkgbmctb3BlbmFwaS1nZW4gRE8gTk9UIEVESVQuICovXG5cbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBDb250ZXh0LCBIdHRwUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFN0cmljdEh0dHBSZXNwb25zZSB9IGZyb20gJy4uLy4uL3N0cmljdC1odHRwLXJlc3BvbnNlJztcbmltcG9ydCB7IFJlcXVlc3RCdWlsZGVyIH0gZnJvbSAnLi4vLi4vcmVxdWVzdC1idWlsZGVyJztcblxuaW1wb3J0IHsgV29ya2Zsb3dBcHBseUR0byB9IGZyb20gJy4uLy4uL21vZGVscy93b3JrZmxvdy1hcHBseS1kdG8nO1xuXG5leHBvcnQgaW50ZXJmYWNlIFdvcmtmbG93QXBwbHlDb250cm9sbGVyQXBwbHlTdGVwJFBhcmFtcyB7XG4gICAgICBib2R5OiBXb3JrZmxvd0FwcGx5RHRvXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3b3JrZmxvd0FwcGx5Q29udHJvbGxlckFwcGx5U3RlcChodHRwOiBIdHRwQ2xpZW50LCByb290VXJsOiBzdHJpbmcsIHBhcmFtczogV29ya2Zsb3dBcHBseUNvbnRyb2xsZXJBcHBseVN0ZXAkUGFyYW1zLCBjb250ZXh0PzogSHR0cENvbnRleHQpOiBPYnNlcnZhYmxlPFN0cmljdEh0dHBSZXNwb25zZTx2b2lkPj4ge1xuICBjb25zdCByYiA9IG5ldyBSZXF1ZXN0QnVpbGRlcihyb290VXJsLCB3b3JrZmxvd0FwcGx5Q29udHJvbGxlckFwcGx5U3RlcC5QQVRILCAncG9zdCcpO1xuICBpZiAocGFyYW1zKSB7XG4gICAgcmIuYm9keShwYXJhbXMuYm9keSwgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAgfVxuXG4gIHJldHVybiBodHRwLnJlcXVlc3QoXG4gICAgcmIuYnVpbGQoeyByZXNwb25zZVR5cGU6ICd0ZXh0JywgYWNjZXB0OiAnKi8qJywgY29udGV4dCB9KVxuICApLnBpcGUoXG4gICAgZmlsdGVyKChyOiBhbnkpOiByIGlzIEh0dHBSZXNwb25zZTxhbnk+ID0+IHIgaW5zdGFuY2VvZiBIdHRwUmVzcG9uc2UpLFxuICAgIG1hcCgocjogSHR0cFJlc3BvbnNlPGFueT4pID0+IHtcbiAgICAgIHJldHVybiAociBhcyBIdHRwUmVzcG9uc2U8YW55PikuY2xvbmUoeyBib2R5OiB1bmRlZmluZWQgfSkgYXMgU3RyaWN0SHR0cFJlc3BvbnNlPHZvaWQ+O1xuICAgIH0pXG4gICk7XG59XG5cbndvcmtmbG93QXBwbHlDb250cm9sbGVyQXBwbHlTdGVwLlBBVEggPSAnL2F1dGgvd29ya2Zsb3cvd29ya2Zsb3cvYXBwbHknO1xuIl19