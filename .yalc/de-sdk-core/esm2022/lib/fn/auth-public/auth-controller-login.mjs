/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function authControllerLogin(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, authControllerLogin.PATH, 'post');
    if (params) {
        rb.body(params.body, 'application/json');
    }
    return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r;
    }));
}
authControllerLogin.PATH = '/nonauth/auth/auth/login';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1jb250cm9sbGVyLWxvZ2luLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2RrY29yZS9zcmMvbGliL2ZuL2F1dGgtcHVibGljL2F1dGgtY29udHJvbGxlci1sb2dpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLG1EQUFtRDtBQUVuRCxPQUFPLEVBQTJCLFlBQVksRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRTdFLE9BQU8sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBU3ZELE1BQU0sVUFBVSxtQkFBbUIsQ0FBQyxJQUFnQixFQUFFLE9BQWUsRUFBRSxNQUFrQyxFQUFFLE9BQXFCO0lBQzlILE1BQU0sRUFBRSxHQUFHLElBQUksY0FBYyxDQUFDLE9BQU8sRUFBRSxtQkFBbUIsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDekUsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNYLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQ2pCLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxrQkFBa0IsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUN4RSxDQUFDLElBQUksQ0FDSixNQUFNLENBQUMsQ0FBQyxDQUFNLEVBQTBCLEVBQUUsQ0FBQyxDQUFDLFlBQVksWUFBWSxDQUFDLEVBQ3JFLEdBQUcsQ0FBQyxDQUFDLENBQW9CLEVBQUUsRUFBRTtRQUMzQixPQUFPLENBQXdDLENBQUM7SUFDbEQsQ0FBQyxDQUFDLENBQ0gsQ0FBQztBQUNKLENBQUM7QUFFRCxtQkFBbUIsQ0FBQyxJQUFJLEdBQUcsMEJBQTBCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qIENvZGUgZ2VuZXJhdGVkIGJ5IG5nLW9wZW5hcGktZ2VuIERPIE5PVCBFRElULiAqL1xuXG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwQ29udGV4dCwgSHR0cFJlc3BvbnNlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZmlsdGVyLCBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBTdHJpY3RIdHRwUmVzcG9uc2UgfSBmcm9tICcuLi8uLi9zdHJpY3QtaHR0cC1yZXNwb25zZSc7XG5pbXBvcnQgeyBSZXF1ZXN0QnVpbGRlciB9IGZyb20gJy4uLy4uL3JlcXVlc3QtYnVpbGRlcic7XG5cbmltcG9ydCB7IEF1dGhSZXNwb25zZUR0byB9IGZyb20gJy4uLy4uL21vZGVscy9hdXRoLXJlc3BvbnNlLWR0byc7XG5pbXBvcnQgeyBMb2dpbkR0byB9IGZyb20gJy4uLy4uL21vZGVscy9sb2dpbi1kdG8nO1xuXG5leHBvcnQgaW50ZXJmYWNlIEF1dGhDb250cm9sbGVyTG9naW4kUGFyYW1zIHtcbiAgICAgIGJvZHk6IExvZ2luRHRvXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhdXRoQ29udHJvbGxlckxvZ2luKGh0dHA6IEh0dHBDbGllbnQsIHJvb3RVcmw6IHN0cmluZywgcGFyYW1zOiBBdXRoQ29udHJvbGxlckxvZ2luJFBhcmFtcywgY29udGV4dD86IEh0dHBDb250ZXh0KTogT2JzZXJ2YWJsZTxTdHJpY3RIdHRwUmVzcG9uc2U8QXV0aFJlc3BvbnNlRHRvPj4ge1xuICBjb25zdCByYiA9IG5ldyBSZXF1ZXN0QnVpbGRlcihyb290VXJsLCBhdXRoQ29udHJvbGxlckxvZ2luLlBBVEgsICdwb3N0Jyk7XG4gIGlmIChwYXJhbXMpIHtcbiAgICByYi5ib2R5KHBhcmFtcy5ib2R5LCAnYXBwbGljYXRpb24vanNvbicpO1xuICB9XG5cbiAgcmV0dXJuIGh0dHAucmVxdWVzdChcbiAgICByYi5idWlsZCh7IHJlc3BvbnNlVHlwZTogJ2pzb24nLCBhY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJywgY29udGV4dCB9KVxuICApLnBpcGUoXG4gICAgZmlsdGVyKChyOiBhbnkpOiByIGlzIEh0dHBSZXNwb25zZTxhbnk+ID0+IHIgaW5zdGFuY2VvZiBIdHRwUmVzcG9uc2UpLFxuICAgIG1hcCgocjogSHR0cFJlc3BvbnNlPGFueT4pID0+IHtcbiAgICAgIHJldHVybiByIGFzIFN0cmljdEh0dHBSZXNwb25zZTxBdXRoUmVzcG9uc2VEdG8+O1xuICAgIH0pXG4gICk7XG59XG5cbmF1dGhDb250cm9sbGVyTG9naW4uUEFUSCA9ICcvbm9uYXV0aC9hdXRoL2F1dGgvbG9naW4nO1xuIl19