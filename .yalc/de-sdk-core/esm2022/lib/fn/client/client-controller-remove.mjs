/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function clientControllerRemove(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, clientControllerRemove.PATH, 'delete');
    if (params) {
        rb.path('id', params.id, {});
    }
    return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r;
    }));
}
clientControllerRemove.PATH = '/client/{id}';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LWNvbnRyb2xsZXItcmVtb3ZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2RrY29yZS9zcmMvbGliL2ZuL2NsaWVudC9jbGllbnQtY29udHJvbGxlci1yZW1vdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixtREFBbUQ7QUFFbkQsT0FBTyxFQUEyQixZQUFZLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUU3RSxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQVF2RCxNQUFNLFVBQVUsc0JBQXNCLENBQUMsSUFBZ0IsRUFBRSxPQUFlLEVBQUUsTUFBcUMsRUFBRSxPQUFxQjtJQUtwSSxNQUFNLEVBQUUsR0FBRyxJQUFJLGNBQWMsQ0FBQyxPQUFPLEVBQUUsc0JBQXNCLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzlFLElBQUksTUFBTSxFQUFFLENBQUM7UUFDWCxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQ2pCLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxrQkFBa0IsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUN4RSxDQUFDLElBQUksQ0FDSixNQUFNLENBQUMsQ0FBQyxDQUFNLEVBQTBCLEVBQUUsQ0FBQyxDQUFDLFlBQVksWUFBWSxDQUFDLEVBQ3JFLEdBQUcsQ0FBQyxDQUFDLENBQW9CLEVBQUUsRUFBRTtRQUMzQixPQUFPLENBSUwsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUNILENBQUM7QUFDSixDQUFDO0FBRUQsc0JBQXNCLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogQ29kZSBnZW5lcmF0ZWQgYnkgbmctb3BlbmFwaS1nZW4gRE8gTk9UIEVESVQuICovXG5cbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBDb250ZXh0LCBIdHRwUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFN0cmljdEh0dHBSZXNwb25zZSB9IGZyb20gJy4uLy4uL3N0cmljdC1odHRwLXJlc3BvbnNlJztcbmltcG9ydCB7IFJlcXVlc3RCdWlsZGVyIH0gZnJvbSAnLi4vLi4vcmVxdWVzdC1idWlsZGVyJztcblxuaW1wb3J0IHsgUGVsYW5nZ2FuQ2xpZW50RHRvIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3BlbGFuZ2dhbi1jbGllbnQtZHRvJztcblxuZXhwb3J0IGludGVyZmFjZSBDbGllbnRDb250cm9sbGVyUmVtb3ZlJFBhcmFtcyB7XG4gIGlkOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGllbnRDb250cm9sbGVyUmVtb3ZlKGh0dHA6IEh0dHBDbGllbnQsIHJvb3RVcmw6IHN0cmluZywgcGFyYW1zOiBDbGllbnRDb250cm9sbGVyUmVtb3ZlJFBhcmFtcywgY29udGV4dD86IEh0dHBDb250ZXh0KTogT2JzZXJ2YWJsZTxTdHJpY3RIdHRwUmVzcG9uc2U8e1xuJ2NvZGUnPzogbnVtYmVyO1xuJ3Blc2FuJz86IHN0cmluZztcbidkYXRhJz86IFBlbGFuZ2dhbkNsaWVudER0bztcbn0+PiB7XG4gIGNvbnN0IHJiID0gbmV3IFJlcXVlc3RCdWlsZGVyKHJvb3RVcmwsIGNsaWVudENvbnRyb2xsZXJSZW1vdmUuUEFUSCwgJ2RlbGV0ZScpO1xuICBpZiAocGFyYW1zKSB7XG4gICAgcmIucGF0aCgnaWQnLCBwYXJhbXMuaWQsIHt9KTtcbiAgfVxuXG4gIHJldHVybiBodHRwLnJlcXVlc3QoXG4gICAgcmIuYnVpbGQoeyByZXNwb25zZVR5cGU6ICdqc29uJywgYWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsIGNvbnRleHQgfSlcbiAgKS5waXBlKFxuICAgIGZpbHRlcigocjogYW55KTogciBpcyBIdHRwUmVzcG9uc2U8YW55PiA9PiByIGluc3RhbmNlb2YgSHR0cFJlc3BvbnNlKSxcbiAgICBtYXAoKHI6IEh0dHBSZXNwb25zZTxhbnk+KSA9PiB7XG4gICAgICByZXR1cm4gciBhcyBTdHJpY3RIdHRwUmVzcG9uc2U8e1xuICAgICAgJ2NvZGUnPzogbnVtYmVyO1xuICAgICAgJ3Blc2FuJz86IHN0cmluZztcbiAgICAgICdkYXRhJz86IFBlbGFuZ2dhbkNsaWVudER0bztcbiAgICAgIH0+O1xuICAgIH0pXG4gICk7XG59XG5cbmNsaWVudENvbnRyb2xsZXJSZW1vdmUuUEFUSCA9ICcvY2xpZW50L3tpZH0nO1xuIl19