/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function kantorControllerFindOne(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, kantorControllerFindOne.PATH, 'get');
    if (params) {
        rb.path('id', params.id, {});
    }
    return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r;
    }));
}
kantorControllerFindOne.PATH = '/auth/kantor/kantor/{id}';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2FudG9yLWNvbnRyb2xsZXItZmluZC1vbmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zZGtjb3JlL3NyYy9saWIvZm4va2FudG9yL2thbnRvci1jb250cm9sbGVyLWZpbmQtb25lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsbURBQW1EO0FBRW5ELE9BQU8sRUFBMkIsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFN0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFRdkQsTUFBTSxVQUFVLHVCQUF1QixDQUFDLElBQWdCLEVBQUUsT0FBZSxFQUFFLE1BQXNDLEVBQUUsT0FBcUI7SUFLdEksTUFBTSxFQUFFLEdBQUcsSUFBSSxjQUFjLENBQUMsT0FBTyxFQUFFLHVCQUF1QixDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM1RSxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ1gsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUNqQixFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FDeEUsQ0FBQyxJQUFJLENBQ0osTUFBTSxDQUFDLENBQUMsQ0FBTSxFQUEwQixFQUFFLENBQUMsQ0FBQyxZQUFZLFlBQVksQ0FBQyxFQUNyRSxHQUFHLENBQUMsQ0FBQyxDQUFvQixFQUFFLEVBQUU7UUFDM0IsT0FBTyxDQUlMLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FDSCxDQUFDO0FBQ0osQ0FBQztBQUVELHVCQUF1QixDQUFDLElBQUksR0FBRywwQkFBMEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogQ29kZSBnZW5lcmF0ZWQgYnkgbmctb3BlbmFwaS1nZW4gRE8gTk9UIEVESVQuICovXG5cbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBDb250ZXh0LCBIdHRwUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFN0cmljdEh0dHBSZXNwb25zZSB9IGZyb20gJy4uLy4uL3N0cmljdC1odHRwLXJlc3BvbnNlJztcbmltcG9ydCB7IFJlcXVlc3RCdWlsZGVyIH0gZnJvbSAnLi4vLi4vcmVxdWVzdC1idWlsZGVyJztcblxuaW1wb3J0IHsgUGVsYW5nZ2FuS2FudG9yRHRvIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3BlbGFuZ2dhbi1rYW50b3ItZHRvJztcblxuZXhwb3J0IGludGVyZmFjZSBLYW50b3JDb250cm9sbGVyRmluZE9uZSRQYXJhbXMge1xuICBpZDogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24ga2FudG9yQ29udHJvbGxlckZpbmRPbmUoaHR0cDogSHR0cENsaWVudCwgcm9vdFVybDogc3RyaW5nLCBwYXJhbXM6IEthbnRvckNvbnRyb2xsZXJGaW5kT25lJFBhcmFtcywgY29udGV4dD86IEh0dHBDb250ZXh0KTogT2JzZXJ2YWJsZTxTdHJpY3RIdHRwUmVzcG9uc2U8e1xuJ2NvZGUnPzogbnVtYmVyO1xuJ3Blc2FuJz86IHN0cmluZztcbidkYXRhJz86IFBlbGFuZ2dhbkthbnRvckR0bztcbn0+PiB7XG4gIGNvbnN0IHJiID0gbmV3IFJlcXVlc3RCdWlsZGVyKHJvb3RVcmwsIGthbnRvckNvbnRyb2xsZXJGaW5kT25lLlBBVEgsICdnZXQnKTtcbiAgaWYgKHBhcmFtcykge1xuICAgIHJiLnBhdGgoJ2lkJywgcGFyYW1zLmlkLCB7fSk7XG4gIH1cblxuICByZXR1cm4gaHR0cC5yZXF1ZXN0KFxuICAgIHJiLmJ1aWxkKHsgcmVzcG9uc2VUeXBlOiAnanNvbicsIGFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLCBjb250ZXh0IH0pXG4gICkucGlwZShcbiAgICBmaWx0ZXIoKHI6IGFueSk6IHIgaXMgSHR0cFJlc3BvbnNlPGFueT4gPT4gciBpbnN0YW5jZW9mIEh0dHBSZXNwb25zZSksXG4gICAgbWFwKChyOiBIdHRwUmVzcG9uc2U8YW55PikgPT4ge1xuICAgICAgcmV0dXJuIHIgYXMgU3RyaWN0SHR0cFJlc3BvbnNlPHtcbiAgICAgICdjb2RlJz86IG51bWJlcjtcbiAgICAgICdwZXNhbic/OiBzdHJpbmc7XG4gICAgICAnZGF0YSc/OiBQZWxhbmdnYW5LYW50b3JEdG87XG4gICAgICB9PjtcbiAgICB9KVxuICApO1xufVxuXG5rYW50b3JDb250cm9sbGVyRmluZE9uZS5QQVRIID0gJy9hdXRoL2thbnRvci9rYW50b3Ive2lkfSc7XG4iXX0=