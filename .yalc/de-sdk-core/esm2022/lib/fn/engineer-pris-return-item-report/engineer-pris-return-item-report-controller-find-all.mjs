/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function engineerPrisReturnItemReportControllerFindAll(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, engineerPrisReturnItemReportControllerFindAll.PATH, 'post');
    if (params) {
        rb.body(params.body, 'application/json');
    }
    return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r;
    }));
}
engineerPrisReturnItemReportControllerFindAll.PATH = '/amims/engineer_pris_return_item/engineer_pris_return_item_report/list';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5naW5lZXItcHJpcy1yZXR1cm4taXRlbS1yZXBvcnQtY29udHJvbGxlci1maW5kLWFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3Nka2NvcmUvc3JjL2xpYi9mbi9lbmdpbmVlci1wcmlzLXJldHVybi1pdGVtLXJlcG9ydC9lbmdpbmVlci1wcmlzLXJldHVybi1pdGVtLXJlcG9ydC1jb250cm9sbGVyLWZpbmQtYWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsbURBQW1EO0FBRW5ELE9BQU8sRUFBMkIsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFN0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFTdkQsTUFBTSxVQUFVLDZDQUE2QyxDQUFDLElBQWdCLEVBQUUsT0FBZSxFQUFFLE1BQTRELEVBQUUsT0FBcUI7SUFNbEwsTUFBTSxFQUFFLEdBQUcsSUFBSSxjQUFjLENBQUMsT0FBTyxFQUFFLDZDQUE2QyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNuRyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ1gsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLGtCQUFrQixDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FDakIsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLGtCQUFrQixFQUFFLE9BQU8sRUFBRSxDQUFDLENBQ3hFLENBQUMsSUFBSSxDQUNKLE1BQU0sQ0FBQyxDQUFDLENBQU0sRUFBMEIsRUFBRSxDQUFDLENBQUMsWUFBWSxZQUFZLENBQUMsRUFDckUsR0FBRyxDQUFDLENBQUMsQ0FBb0IsRUFBRSxFQUFFO1FBQzNCLE9BQU8sQ0FLTCxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQ0gsQ0FBQztBQUNKLENBQUM7QUFFRCw2Q0FBNkMsQ0FBQyxJQUFJLEdBQUcsd0VBQXdFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qIENvZGUgZ2VuZXJhdGVkIGJ5IG5nLW9wZW5hcGktZ2VuIERPIE5PVCBFRElULiAqL1xuXG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwQ29udGV4dCwgSHR0cFJlc3BvbnNlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZmlsdGVyLCBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBTdHJpY3RIdHRwUmVzcG9uc2UgfSBmcm9tICcuLi8uLi9zdHJpY3QtaHR0cC1yZXNwb25zZSc7XG5pbXBvcnQgeyBSZXF1ZXN0QnVpbGRlciB9IGZyb20gJy4uLy4uL3JlcXVlc3QtYnVpbGRlcic7XG5cbmltcG9ydCB7IEFtaW1zRW5naW5lZXJQcmlzUmV0dXJuSXRlbVJlcG9ydER0byB9IGZyb20gJy4uLy4uL21vZGVscy9hbWltcy1lbmdpbmVlci1wcmlzLXJldHVybi1pdGVtLXJlcG9ydC1kdG8nO1xuaW1wb3J0IHsgQmFzZVF1ZXJ5RHRvU21hcnQgfSBmcm9tICcuLi8uLi9tb2RlbHMvYmFzZS1xdWVyeS1kdG8tc21hcnQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVuZ2luZWVyUHJpc1JldHVybkl0ZW1SZXBvcnRDb250cm9sbGVyRmluZEFsbCRQYXJhbXMge1xuICAgICAgYm9keTogQmFzZVF1ZXJ5RHRvU21hcnRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVuZ2luZWVyUHJpc1JldHVybkl0ZW1SZXBvcnRDb250cm9sbGVyRmluZEFsbChodHRwOiBIdHRwQ2xpZW50LCByb290VXJsOiBzdHJpbmcsIHBhcmFtczogRW5naW5lZXJQcmlzUmV0dXJuSXRlbVJlcG9ydENvbnRyb2xsZXJGaW5kQWxsJFBhcmFtcywgY29udGV4dD86IEh0dHBDb250ZXh0KTogT2JzZXJ2YWJsZTxTdHJpY3RIdHRwUmVzcG9uc2U8e1xuJ2NvZGUnPzogbnVtYmVyO1xuJ3Blc2FuJz86IHN0cmluZztcbidkYXRhJz86IEFycmF5PEFtaW1zRW5naW5lZXJQcmlzUmV0dXJuSXRlbVJlcG9ydER0bz47XG4ndG90YWwnPzogbnVtYmVyO1xufT4+IHtcbiAgY29uc3QgcmIgPSBuZXcgUmVxdWVzdEJ1aWxkZXIocm9vdFVybCwgZW5naW5lZXJQcmlzUmV0dXJuSXRlbVJlcG9ydENvbnRyb2xsZXJGaW5kQWxsLlBBVEgsICdwb3N0Jyk7XG4gIGlmIChwYXJhbXMpIHtcbiAgICByYi5ib2R5KHBhcmFtcy5ib2R5LCAnYXBwbGljYXRpb24vanNvbicpO1xuICB9XG5cbiAgcmV0dXJuIGh0dHAucmVxdWVzdChcbiAgICByYi5idWlsZCh7IHJlc3BvbnNlVHlwZTogJ2pzb24nLCBhY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJywgY29udGV4dCB9KVxuICApLnBpcGUoXG4gICAgZmlsdGVyKChyOiBhbnkpOiByIGlzIEh0dHBSZXNwb25zZTxhbnk+ID0+IHIgaW5zdGFuY2VvZiBIdHRwUmVzcG9uc2UpLFxuICAgIG1hcCgocjogSHR0cFJlc3BvbnNlPGFueT4pID0+IHtcbiAgICAgIHJldHVybiByIGFzIFN0cmljdEh0dHBSZXNwb25zZTx7XG4gICAgICAnY29kZSc/OiBudW1iZXI7XG4gICAgICAncGVzYW4nPzogc3RyaW5nO1xuICAgICAgJ2RhdGEnPzogQXJyYXk8QW1pbXNFbmdpbmVlclByaXNSZXR1cm5JdGVtUmVwb3J0RHRvPjtcbiAgICAgICd0b3RhbCc/OiBudW1iZXI7XG4gICAgICB9PjtcbiAgICB9KVxuICApO1xufVxuXG5lbmdpbmVlclByaXNSZXR1cm5JdGVtUmVwb3J0Q29udHJvbGxlckZpbmRBbGwuUEFUSCA9ICcvYW1pbXMvZW5naW5lZXJfcHJpc19yZXR1cm5faXRlbS9lbmdpbmVlcl9wcmlzX3JldHVybl9pdGVtX3JlcG9ydC9saXN0JztcbiJdfQ==