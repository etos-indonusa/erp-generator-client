/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function storeDestroyReportControllerFindAll(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, storeDestroyReportControllerFindAll.PATH, 'post');
    if (params) {
        rb.body(params.body, 'application/json');
    }
    return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r;
    }));
}
storeDestroyReportControllerFindAll.PATH = '/amims/store_destroy/store_destroy_report/list';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUtZGVzdHJveS1yZXBvcnQtY29udHJvbGxlci1maW5kLWFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3Nka2NvcmUvc3JjL2xpYi9mbi9zdG9yZS1kZXN0cm95LXJlcG9ydC9zdG9yZS1kZXN0cm95LXJlcG9ydC1jb250cm9sbGVyLWZpbmQtYWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsbURBQW1EO0FBRW5ELE9BQU8sRUFBMkIsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFN0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFTdkQsTUFBTSxVQUFVLG1DQUFtQyxDQUFDLElBQWdCLEVBQUUsT0FBZSxFQUFFLE1BQWtELEVBQUUsT0FBcUI7SUFNOUosTUFBTSxFQUFFLEdBQUcsSUFBSSxjQUFjLENBQUMsT0FBTyxFQUFFLG1DQUFtQyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN6RixJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ1gsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLGtCQUFrQixDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FDakIsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLGtCQUFrQixFQUFFLE9BQU8sRUFBRSxDQUFDLENBQ3hFLENBQUMsSUFBSSxDQUNKLE1BQU0sQ0FBQyxDQUFDLENBQU0sRUFBMEIsRUFBRSxDQUFDLENBQUMsWUFBWSxZQUFZLENBQUMsRUFDckUsR0FBRyxDQUFDLENBQUMsQ0FBb0IsRUFBRSxFQUFFO1FBQzNCLE9BQU8sQ0FLTCxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQ0gsQ0FBQztBQUNKLENBQUM7QUFFRCxtQ0FBbUMsQ0FBQyxJQUFJLEdBQUcsZ0RBQWdELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qIENvZGUgZ2VuZXJhdGVkIGJ5IG5nLW9wZW5hcGktZ2VuIERPIE5PVCBFRElULiAqL1xuXG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwQ29udGV4dCwgSHR0cFJlc3BvbnNlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZmlsdGVyLCBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBTdHJpY3RIdHRwUmVzcG9uc2UgfSBmcm9tICcuLi8uLi9zdHJpY3QtaHR0cC1yZXNwb25zZSc7XG5pbXBvcnQgeyBSZXF1ZXN0QnVpbGRlciB9IGZyb20gJy4uLy4uL3JlcXVlc3QtYnVpbGRlcic7XG5cbmltcG9ydCB7IEFtaW1zU3RvcmVEZXN0cm95UmVwb3J0RHRvIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2FtaW1zLXN0b3JlLWRlc3Ryb3ktcmVwb3J0LWR0byc7XG5pbXBvcnQgeyBCYXNlUXVlcnlEdG9TbWFydCB9IGZyb20gJy4uLy4uL21vZGVscy9iYXNlLXF1ZXJ5LWR0by1zbWFydCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmVEZXN0cm95UmVwb3J0Q29udHJvbGxlckZpbmRBbGwkUGFyYW1zIHtcbiAgICAgIGJvZHk6IEJhc2VRdWVyeUR0b1NtYXJ0XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdG9yZURlc3Ryb3lSZXBvcnRDb250cm9sbGVyRmluZEFsbChodHRwOiBIdHRwQ2xpZW50LCByb290VXJsOiBzdHJpbmcsIHBhcmFtczogU3RvcmVEZXN0cm95UmVwb3J0Q29udHJvbGxlckZpbmRBbGwkUGFyYW1zLCBjb250ZXh0PzogSHR0cENvbnRleHQpOiBPYnNlcnZhYmxlPFN0cmljdEh0dHBSZXNwb25zZTx7XG4nY29kZSc/OiBudW1iZXI7XG4ncGVzYW4nPzogc3RyaW5nO1xuJ2RhdGEnPzogQXJyYXk8QW1pbXNTdG9yZURlc3Ryb3lSZXBvcnREdG8+O1xuJ3RvdGFsJz86IG51bWJlcjtcbn0+PiB7XG4gIGNvbnN0IHJiID0gbmV3IFJlcXVlc3RCdWlsZGVyKHJvb3RVcmwsIHN0b3JlRGVzdHJveVJlcG9ydENvbnRyb2xsZXJGaW5kQWxsLlBBVEgsICdwb3N0Jyk7XG4gIGlmIChwYXJhbXMpIHtcbiAgICByYi5ib2R5KHBhcmFtcy5ib2R5LCAnYXBwbGljYXRpb24vanNvbicpO1xuICB9XG5cbiAgcmV0dXJuIGh0dHAucmVxdWVzdChcbiAgICByYi5idWlsZCh7IHJlc3BvbnNlVHlwZTogJ2pzb24nLCBhY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJywgY29udGV4dCB9KVxuICApLnBpcGUoXG4gICAgZmlsdGVyKChyOiBhbnkpOiByIGlzIEh0dHBSZXNwb25zZTxhbnk+ID0+IHIgaW5zdGFuY2VvZiBIdHRwUmVzcG9uc2UpLFxuICAgIG1hcCgocjogSHR0cFJlc3BvbnNlPGFueT4pID0+IHtcbiAgICAgIHJldHVybiByIGFzIFN0cmljdEh0dHBSZXNwb25zZTx7XG4gICAgICAnY29kZSc/OiBudW1iZXI7XG4gICAgICAncGVzYW4nPzogc3RyaW5nO1xuICAgICAgJ2RhdGEnPzogQXJyYXk8QW1pbXNTdG9yZURlc3Ryb3lSZXBvcnREdG8+O1xuICAgICAgJ3RvdGFsJz86IG51bWJlcjtcbiAgICAgIH0+O1xuICAgIH0pXG4gICk7XG59XG5cbnN0b3JlRGVzdHJveVJlcG9ydENvbnRyb2xsZXJGaW5kQWxsLlBBVEggPSAnL2FtaW1zL3N0b3JlX2Rlc3Ryb3kvc3RvcmVfZGVzdHJveV9yZXBvcnQvbGlzdCc7XG4iXX0=