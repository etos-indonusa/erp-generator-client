/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function clientContactControllerFindAll(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, clientContactControllerFindAll.PATH, 'get');
    if (params) {
        rb.query('pageIndex', params.pageIndex, {});
        rb.query('pageSize', params.pageSize, {});
        rb.query('filter', params.filter, {});
        rb.query('sortKey', params.sortKey, {});
        rb.query('sortValue', params.sortValue, {});
        rb.query('search_field', params.search_field, {});
        rb.query('search_keyword', params.search_keyword, {});
    }
    return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r;
    }));
}
clientContactControllerFindAll.PATH = '/pelanggan/client_contact/client_contact';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LWNvbnRhY3QtY29udHJvbGxlci1maW5kLWFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3Nka2NvcmUvc3JjL2xpYi9mbi9jbGllbnQtY29udGFjdC9jbGllbnQtY29udGFjdC1jb250cm9sbGVyLWZpbmQtYWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsbURBQW1EO0FBRW5ELE9BQU8sRUFBMkIsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFN0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFzQnZELE1BQU0sVUFBVSw4QkFBOEIsQ0FBQyxJQUFnQixFQUFFLE9BQWUsRUFBRSxNQUE4QyxFQUFFLE9BQXFCO0lBTXJKLE1BQU0sRUFBRSxHQUFHLElBQUksY0FBYyxDQUFDLE9BQU8sRUFBRSw4QkFBOEIsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDbkYsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNYLEVBQUUsQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLE1BQU0sQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDNUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUMxQyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3RDLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDeEMsRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUM1QyxFQUFFLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBRSxNQUFNLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ2xELEVBQUUsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLEVBQUUsTUFBTSxDQUFDLGNBQWMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUNqQixFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FDeEUsQ0FBQyxJQUFJLENBQ0osTUFBTSxDQUFDLENBQUMsQ0FBTSxFQUEwQixFQUFFLENBQUMsQ0FBQyxZQUFZLFlBQVksQ0FBQyxFQUNyRSxHQUFHLENBQUMsQ0FBQyxDQUFvQixFQUFFLEVBQUU7UUFDM0IsT0FBTyxDQUtMLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FDSCxDQUFDO0FBQ0osQ0FBQztBQUVELDhCQUE4QixDQUFDLElBQUksR0FBRywwQ0FBMEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogQ29kZSBnZW5lcmF0ZWQgYnkgbmctb3BlbmFwaS1nZW4gRE8gTk9UIEVESVQuICovXG5cbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBDb250ZXh0LCBIdHRwUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFN0cmljdEh0dHBSZXNwb25zZSB9IGZyb20gJy4uLy4uL3N0cmljdC1odHRwLXJlc3BvbnNlJztcbmltcG9ydCB7IFJlcXVlc3RCdWlsZGVyIH0gZnJvbSAnLi4vLi4vcmVxdWVzdC1idWlsZGVyJztcblxuaW1wb3J0IHsgUGVsYW5nZ2FuQ2xpZW50Q29udGFjdER0byB9IGZyb20gJy4uLy4uL21vZGVscy9wZWxhbmdnYW4tY2xpZW50LWNvbnRhY3QtZHRvJztcblxuZXhwb3J0IGludGVyZmFjZSBDbGllbnRDb250YWN0Q29udHJvbGxlckZpbmRBbGwkUGFyYW1zIHtcbiAgcGFnZUluZGV4PzogbnVtYmVyO1xuICBwYWdlU2l6ZT86IG51bWJlcjtcblxuLyoqXG4gKiBKU09OLnN0cmluZ2lmeSh7fSlcbiAqL1xuICBmaWx0ZXI/OiBzdHJpbmc7XG4gIHNvcnRLZXk/OiBzdHJpbmc7XG4gIHNvcnRWYWx1ZT86ICdhc2MnIHwgJ2Rlc2MnO1xuXG4vKipcbiAqIEFycmF5IG9mIHNlYXJjaGFibGUgZmllbGRzXG4gKi9cbiAgc2VhcmNoX2ZpZWxkPzogQXJyYXk8c3RyaW5nPjtcbiAgc2VhcmNoX2tleXdvcmQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGllbnRDb250YWN0Q29udHJvbGxlckZpbmRBbGwoaHR0cDogSHR0cENsaWVudCwgcm9vdFVybDogc3RyaW5nLCBwYXJhbXM/OiBDbGllbnRDb250YWN0Q29udHJvbGxlckZpbmRBbGwkUGFyYW1zLCBjb250ZXh0PzogSHR0cENvbnRleHQpOiBPYnNlcnZhYmxlPFN0cmljdEh0dHBSZXNwb25zZTx7XG4nY29kZSc/OiBudW1iZXI7XG4ncGVzYW4nPzogc3RyaW5nO1xuJ2RhdGEnPzogQXJyYXk8UGVsYW5nZ2FuQ2xpZW50Q29udGFjdER0bz47XG4ndG90YWwnPzogbnVtYmVyO1xufT4+IHtcbiAgY29uc3QgcmIgPSBuZXcgUmVxdWVzdEJ1aWxkZXIocm9vdFVybCwgY2xpZW50Q29udGFjdENvbnRyb2xsZXJGaW5kQWxsLlBBVEgsICdnZXQnKTtcbiAgaWYgKHBhcmFtcykge1xuICAgIHJiLnF1ZXJ5KCdwYWdlSW5kZXgnLCBwYXJhbXMucGFnZUluZGV4LCB7fSk7XG4gICAgcmIucXVlcnkoJ3BhZ2VTaXplJywgcGFyYW1zLnBhZ2VTaXplLCB7fSk7XG4gICAgcmIucXVlcnkoJ2ZpbHRlcicsIHBhcmFtcy5maWx0ZXIsIHt9KTtcbiAgICByYi5xdWVyeSgnc29ydEtleScsIHBhcmFtcy5zb3J0S2V5LCB7fSk7XG4gICAgcmIucXVlcnkoJ3NvcnRWYWx1ZScsIHBhcmFtcy5zb3J0VmFsdWUsIHt9KTtcbiAgICByYi5xdWVyeSgnc2VhcmNoX2ZpZWxkJywgcGFyYW1zLnNlYXJjaF9maWVsZCwge30pO1xuICAgIHJiLnF1ZXJ5KCdzZWFyY2hfa2V5d29yZCcsIHBhcmFtcy5zZWFyY2hfa2V5d29yZCwge30pO1xuICB9XG5cbiAgcmV0dXJuIGh0dHAucmVxdWVzdChcbiAgICByYi5idWlsZCh7IHJlc3BvbnNlVHlwZTogJ2pzb24nLCBhY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJywgY29udGV4dCB9KVxuICApLnBpcGUoXG4gICAgZmlsdGVyKChyOiBhbnkpOiByIGlzIEh0dHBSZXNwb25zZTxhbnk+ID0+IHIgaW5zdGFuY2VvZiBIdHRwUmVzcG9uc2UpLFxuICAgIG1hcCgocjogSHR0cFJlc3BvbnNlPGFueT4pID0+IHtcbiAgICAgIHJldHVybiByIGFzIFN0cmljdEh0dHBSZXNwb25zZTx7XG4gICAgICAnY29kZSc/OiBudW1iZXI7XG4gICAgICAncGVzYW4nPzogc3RyaW5nO1xuICAgICAgJ2RhdGEnPzogQXJyYXk8UGVsYW5nZ2FuQ2xpZW50Q29udGFjdER0bz47XG4gICAgICAndG90YWwnPzogbnVtYmVyO1xuICAgICAgfT47XG4gICAgfSlcbiAgKTtcbn1cblxuY2xpZW50Q29udGFjdENvbnRyb2xsZXJGaW5kQWxsLlBBVEggPSAnL3BlbGFuZ2dhbi9jbGllbnRfY29udGFjdC9jbGllbnRfY29udGFjdCc7XG4iXX0=