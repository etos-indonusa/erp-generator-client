/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function workflowLogWidgetControllerFindAll(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, workflowLogWidgetControllerFindAll.PATH, 'post');
    if (params) {
        rb.query('filter', params.filter, {});
        rb.query('joinWhere', params.joinWhere, {});
        rb.query('select', params.select, {});
        rb.query('groupBy', params.groupBy, {});
        rb.query('sortKey', params.sortKey, {});
        rb.query('sortValue', params.sortValue, {});
        rb.body(params.body, 'application/json');
    }
    return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r;
    }));
}
workflowLogWidgetControllerFindAll.PATH = '/auth/workflow_log/workflow_log_widget';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29ya2Zsb3ctbG9nLXdpZGdldC1jb250cm9sbGVyLWZpbmQtYWxsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2RrY29yZS9zcmMvbGliL2ZuL3dvcmtmbG93LWxvZy13aWRnZXQvd29ya2Zsb3ctbG9nLXdpZGdldC1jb250cm9sbGVyLWZpbmQtYWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsbURBQW1EO0FBRW5ELE9BQU8sRUFBMkIsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFN0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFpQ3ZELE1BQU0sVUFBVSxrQ0FBa0MsQ0FBQyxJQUFnQixFQUFFLE9BQWUsRUFBRSxNQUFpRCxFQUFFLE9BQXFCO0lBTTVKLE1BQU0sRUFBRSxHQUFHLElBQUksY0FBYyxDQUFDLE9BQU8sRUFBRSxrQ0FBa0MsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDeEYsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNYLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDdEMsRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUM1QyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3RDLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDeEMsRUFBRSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN4QyxFQUFFLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzVDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQ2pCLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxrQkFBa0IsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUN4RSxDQUFDLElBQUksQ0FDSixNQUFNLENBQUMsQ0FBQyxDQUFNLEVBQTBCLEVBQUUsQ0FBQyxDQUFDLFlBQVksWUFBWSxDQUFDLEVBQ3JFLEdBQUcsQ0FBQyxDQUFDLENBQW9CLEVBQUUsRUFBRTtRQUMzQixPQUFPLENBS0wsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUNILENBQUM7QUFDSixDQUFDO0FBRUQsa0NBQWtDLENBQUMsSUFBSSxHQUFHLHdDQUF3QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKiBDb2RlIGdlbmVyYXRlZCBieSBuZy1vcGVuYXBpLWdlbiBETyBOT1QgRURJVC4gKi9cblxuaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cENvbnRleHQsIEh0dHBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGZpbHRlciwgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgU3RyaWN0SHR0cFJlc3BvbnNlIH0gZnJvbSAnLi4vLi4vc3RyaWN0LWh0dHAtcmVzcG9uc2UnO1xuaW1wb3J0IHsgUmVxdWVzdEJ1aWxkZXIgfSBmcm9tICcuLi8uLi9yZXF1ZXN0LWJ1aWxkZXInO1xuXG5pbXBvcnQgeyBCYXNlV2lkZ2V0UXVlcnlEdG8gfSBmcm9tICcuLi8uLi9tb2RlbHMvYmFzZS13aWRnZXQtcXVlcnktZHRvJztcbmltcG9ydCB7IE9iamVjdCB9IGZyb20gJy4uLy4uL21vZGVscy9vYmplY3QnO1xuaW1wb3J0IHsgU2VsZWN0RmllbGREdG8gfSBmcm9tICcuLi8uLi9tb2RlbHMvc2VsZWN0LWZpZWxkLWR0byc7XG5pbXBvcnQgeyBUb29sc1dvcmtmbG93TG9nV2lkZ2V0RHRvIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3Rvb2xzLXdvcmtmbG93LWxvZy13aWRnZXQtZHRvJztcblxuZXhwb3J0IGludGVyZmFjZSBXb3JrZmxvd0xvZ1dpZGdldENvbnRyb2xsZXJGaW5kQWxsJFBhcmFtcyB7XG5cbi8qKlxuICogRmlsdGVyIG9iamVjdFxuICovXG4gIGZpbHRlcj86IE9iamVjdDtcblxuLyoqXG4gKiBKb2luV2hlcmUgb2JqZWN0XG4gKi9cbiAgam9pbldoZXJlPzogT2JqZWN0O1xuXG4vKipcbiAqIFNlbGVjdCBmaWVsZHMgd2l0aCBhZ2dyZWdhdGlvbiwgZS5nLiBbeyB0eXBlOiBcInN1bVwiLCBmaWVsZDogXCJuaWxhaVwiLCBhbGlhczogXCJ0b3RhbE5pbGFpXCIgfV1cbiAqL1xuICBzZWxlY3Q/OiBBcnJheTxTZWxlY3RGaWVsZER0bz47XG5cbi8qKlxuICogRmllbGRzIHRvIGdyb3VwIGJ5XG4gKi9cbiAgZ3JvdXBCeT86IEFycmF5PHN0cmluZz47XG4gIHNvcnRLZXk/OiBzdHJpbmc7XG4gIHNvcnRWYWx1ZT86ICdBU0MnIHwgJ0RFU0MnO1xuICAgICAgYm9keTogQmFzZVdpZGdldFF1ZXJ5RHRvXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3b3JrZmxvd0xvZ1dpZGdldENvbnRyb2xsZXJGaW5kQWxsKGh0dHA6IEh0dHBDbGllbnQsIHJvb3RVcmw6IHN0cmluZywgcGFyYW1zOiBXb3JrZmxvd0xvZ1dpZGdldENvbnRyb2xsZXJGaW5kQWxsJFBhcmFtcywgY29udGV4dD86IEh0dHBDb250ZXh0KTogT2JzZXJ2YWJsZTxTdHJpY3RIdHRwUmVzcG9uc2U8e1xuJ2NvZGUnPzogbnVtYmVyO1xuJ3Blc2FuJz86IHN0cmluZztcbidkYXRhJz86IEFycmF5PFRvb2xzV29ya2Zsb3dMb2dXaWRnZXREdG8+O1xuJ3RvdGFsJz86IG51bWJlcjtcbn0+PiB7XG4gIGNvbnN0IHJiID0gbmV3IFJlcXVlc3RCdWlsZGVyKHJvb3RVcmwsIHdvcmtmbG93TG9nV2lkZ2V0Q29udHJvbGxlckZpbmRBbGwuUEFUSCwgJ3Bvc3QnKTtcbiAgaWYgKHBhcmFtcykge1xuICAgIHJiLnF1ZXJ5KCdmaWx0ZXInLCBwYXJhbXMuZmlsdGVyLCB7fSk7XG4gICAgcmIucXVlcnkoJ2pvaW5XaGVyZScsIHBhcmFtcy5qb2luV2hlcmUsIHt9KTtcbiAgICByYi5xdWVyeSgnc2VsZWN0JywgcGFyYW1zLnNlbGVjdCwge30pO1xuICAgIHJiLnF1ZXJ5KCdncm91cEJ5JywgcGFyYW1zLmdyb3VwQnksIHt9KTtcbiAgICByYi5xdWVyeSgnc29ydEtleScsIHBhcmFtcy5zb3J0S2V5LCB7fSk7XG4gICAgcmIucXVlcnkoJ3NvcnRWYWx1ZScsIHBhcmFtcy5zb3J0VmFsdWUsIHt9KTtcbiAgICByYi5ib2R5KHBhcmFtcy5ib2R5LCAnYXBwbGljYXRpb24vanNvbicpO1xuICB9XG5cbiAgcmV0dXJuIGh0dHAucmVxdWVzdChcbiAgICByYi5idWlsZCh7IHJlc3BvbnNlVHlwZTogJ2pzb24nLCBhY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJywgY29udGV4dCB9KVxuICApLnBpcGUoXG4gICAgZmlsdGVyKChyOiBhbnkpOiByIGlzIEh0dHBSZXNwb25zZTxhbnk+ID0+IHIgaW5zdGFuY2VvZiBIdHRwUmVzcG9uc2UpLFxuICAgIG1hcCgocjogSHR0cFJlc3BvbnNlPGFueT4pID0+IHtcbiAgICAgIHJldHVybiByIGFzIFN0cmljdEh0dHBSZXNwb25zZTx7XG4gICAgICAnY29kZSc/OiBudW1iZXI7XG4gICAgICAncGVzYW4nPzogc3RyaW5nO1xuICAgICAgJ2RhdGEnPzogQXJyYXk8VG9vbHNXb3JrZmxvd0xvZ1dpZGdldER0bz47XG4gICAgICAndG90YWwnPzogbnVtYmVyO1xuICAgICAgfT47XG4gICAgfSlcbiAgKTtcbn1cblxud29ya2Zsb3dMb2dXaWRnZXRDb250cm9sbGVyRmluZEFsbC5QQVRIID0gJy9hdXRoL3dvcmtmbG93X2xvZy93b3JrZmxvd19sb2dfd2lkZ2V0JztcbiJdfQ==