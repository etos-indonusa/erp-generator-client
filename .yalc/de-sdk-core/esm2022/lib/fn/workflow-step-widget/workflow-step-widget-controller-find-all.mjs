/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function workflowStepWidgetControllerFindAll(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, workflowStepWidgetControllerFindAll.PATH, 'post');
    if (params) {
        rb.query('filter', params.filter, {});
        rb.query('joinWhere', params.joinWhere, {});
        rb.query('select', params.select, {});
        rb.query('groupBy', params.groupBy, {});
        rb.query('sortKey', params.sortKey, {});
        rb.query('sortValue', params.sortValue, {});
        rb.body(params.body, 'application/json');
    }
    return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r;
    }));
}
workflowStepWidgetControllerFindAll.PATH = '/auth/workflow_step/workflow_step_widget';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29ya2Zsb3ctc3RlcC13aWRnZXQtY29udHJvbGxlci1maW5kLWFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3Nka2NvcmUvc3JjL2xpYi9mbi93b3JrZmxvdy1zdGVwLXdpZGdldC93b3JrZmxvdy1zdGVwLXdpZGdldC1jb250cm9sbGVyLWZpbmQtYWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsbURBQW1EO0FBRW5ELE9BQU8sRUFBMkIsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFN0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFpQ3ZELE1BQU0sVUFBVSxtQ0FBbUMsQ0FBQyxJQUFnQixFQUFFLE9BQWUsRUFBRSxNQUFrRCxFQUFFLE9BQXFCO0lBTTlKLE1BQU0sRUFBRSxHQUFHLElBQUksY0FBYyxDQUFDLE9BQU8sRUFBRSxtQ0FBbUMsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDekYsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUNYLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDdEMsRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUM1QyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3RDLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDeEMsRUFBRSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN4QyxFQUFFLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzVDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQ2pCLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxrQkFBa0IsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUN4RSxDQUFDLElBQUksQ0FDSixNQUFNLENBQUMsQ0FBQyxDQUFNLEVBQTBCLEVBQUUsQ0FBQyxDQUFDLFlBQVksWUFBWSxDQUFDLEVBQ3JFLEdBQUcsQ0FBQyxDQUFDLENBQW9CLEVBQUUsRUFBRTtRQUMzQixPQUFPLENBS0wsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUNILENBQUM7QUFDSixDQUFDO0FBRUQsbUNBQW1DLENBQUMsSUFBSSxHQUFHLDBDQUEwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKiBDb2RlIGdlbmVyYXRlZCBieSBuZy1vcGVuYXBpLWdlbiBETyBOT1QgRURJVC4gKi9cblxuaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cENvbnRleHQsIEh0dHBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGZpbHRlciwgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgU3RyaWN0SHR0cFJlc3BvbnNlIH0gZnJvbSAnLi4vLi4vc3RyaWN0LWh0dHAtcmVzcG9uc2UnO1xuaW1wb3J0IHsgUmVxdWVzdEJ1aWxkZXIgfSBmcm9tICcuLi8uLi9yZXF1ZXN0LWJ1aWxkZXInO1xuXG5pbXBvcnQgeyBCYXNlV2lkZ2V0UXVlcnlEdG8gfSBmcm9tICcuLi8uLi9tb2RlbHMvYmFzZS13aWRnZXQtcXVlcnktZHRvJztcbmltcG9ydCB7IE9iamVjdCB9IGZyb20gJy4uLy4uL21vZGVscy9vYmplY3QnO1xuaW1wb3J0IHsgU2VsZWN0RmllbGREdG8gfSBmcm9tICcuLi8uLi9tb2RlbHMvc2VsZWN0LWZpZWxkLWR0byc7XG5pbXBvcnQgeyBUb29sc1dvcmtmbG93U3RlcFdpZGdldER0byB9IGZyb20gJy4uLy4uL21vZGVscy90b29scy13b3JrZmxvdy1zdGVwLXdpZGdldC1kdG8nO1xuXG5leHBvcnQgaW50ZXJmYWNlIFdvcmtmbG93U3RlcFdpZGdldENvbnRyb2xsZXJGaW5kQWxsJFBhcmFtcyB7XG5cbi8qKlxuICogRmlsdGVyIG9iamVjdFxuICovXG4gIGZpbHRlcj86IE9iamVjdDtcblxuLyoqXG4gKiBKb2luV2hlcmUgb2JqZWN0XG4gKi9cbiAgam9pbldoZXJlPzogT2JqZWN0O1xuXG4vKipcbiAqIFNlbGVjdCBmaWVsZHMgd2l0aCBhZ2dyZWdhdGlvbiwgZS5nLiBbeyB0eXBlOiBcInN1bVwiLCBmaWVsZDogXCJuaWxhaVwiLCBhbGlhczogXCJ0b3RhbE5pbGFpXCIgfV1cbiAqL1xuICBzZWxlY3Q/OiBBcnJheTxTZWxlY3RGaWVsZER0bz47XG5cbi8qKlxuICogRmllbGRzIHRvIGdyb3VwIGJ5XG4gKi9cbiAgZ3JvdXBCeT86IEFycmF5PHN0cmluZz47XG4gIHNvcnRLZXk/OiBzdHJpbmc7XG4gIHNvcnRWYWx1ZT86ICdBU0MnIHwgJ0RFU0MnO1xuICAgICAgYm9keTogQmFzZVdpZGdldFF1ZXJ5RHRvXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3b3JrZmxvd1N0ZXBXaWRnZXRDb250cm9sbGVyRmluZEFsbChodHRwOiBIdHRwQ2xpZW50LCByb290VXJsOiBzdHJpbmcsIHBhcmFtczogV29ya2Zsb3dTdGVwV2lkZ2V0Q29udHJvbGxlckZpbmRBbGwkUGFyYW1zLCBjb250ZXh0PzogSHR0cENvbnRleHQpOiBPYnNlcnZhYmxlPFN0cmljdEh0dHBSZXNwb25zZTx7XG4nY29kZSc/OiBudW1iZXI7XG4ncGVzYW4nPzogc3RyaW5nO1xuJ2RhdGEnPzogQXJyYXk8VG9vbHNXb3JrZmxvd1N0ZXBXaWRnZXREdG8+O1xuJ3RvdGFsJz86IG51bWJlcjtcbn0+PiB7XG4gIGNvbnN0IHJiID0gbmV3IFJlcXVlc3RCdWlsZGVyKHJvb3RVcmwsIHdvcmtmbG93U3RlcFdpZGdldENvbnRyb2xsZXJGaW5kQWxsLlBBVEgsICdwb3N0Jyk7XG4gIGlmIChwYXJhbXMpIHtcbiAgICByYi5xdWVyeSgnZmlsdGVyJywgcGFyYW1zLmZpbHRlciwge30pO1xuICAgIHJiLnF1ZXJ5KCdqb2luV2hlcmUnLCBwYXJhbXMuam9pbldoZXJlLCB7fSk7XG4gICAgcmIucXVlcnkoJ3NlbGVjdCcsIHBhcmFtcy5zZWxlY3QsIHt9KTtcbiAgICByYi5xdWVyeSgnZ3JvdXBCeScsIHBhcmFtcy5ncm91cEJ5LCB7fSk7XG4gICAgcmIucXVlcnkoJ3NvcnRLZXknLCBwYXJhbXMuc29ydEtleSwge30pO1xuICAgIHJiLnF1ZXJ5KCdzb3J0VmFsdWUnLCBwYXJhbXMuc29ydFZhbHVlLCB7fSk7XG4gICAgcmIuYm9keShwYXJhbXMuYm9keSwgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAgfVxuXG4gIHJldHVybiBodHRwLnJlcXVlc3QoXG4gICAgcmIuYnVpbGQoeyByZXNwb25zZVR5cGU6ICdqc29uJywgYWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsIGNvbnRleHQgfSlcbiAgKS5waXBlKFxuICAgIGZpbHRlcigocjogYW55KTogciBpcyBIdHRwUmVzcG9uc2U8YW55PiA9PiByIGluc3RhbmNlb2YgSHR0cFJlc3BvbnNlKSxcbiAgICBtYXAoKHI6IEh0dHBSZXNwb25zZTxhbnk+KSA9PiB7XG4gICAgICByZXR1cm4gciBhcyBTdHJpY3RIdHRwUmVzcG9uc2U8e1xuICAgICAgJ2NvZGUnPzogbnVtYmVyO1xuICAgICAgJ3Blc2FuJz86IHN0cmluZztcbiAgICAgICdkYXRhJz86IEFycmF5PFRvb2xzV29ya2Zsb3dTdGVwV2lkZ2V0RHRvPjtcbiAgICAgICd0b3RhbCc/OiBudW1iZXI7XG4gICAgICB9PjtcbiAgICB9KVxuICApO1xufVxuXG53b3JrZmxvd1N0ZXBXaWRnZXRDb250cm9sbGVyRmluZEFsbC5QQVRIID0gJy9hdXRoL3dvcmtmbG93X3N0ZXAvd29ya2Zsb3dfc3RlcF93aWRnZXQnO1xuIl19