/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function mpcGseControllerFindOne(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, mpcGseControllerFindOne.PATH, 'get');
    if (params) {
        rb.path('id', params.id, {});
    }
    return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r;
    }));
}
mpcGseControllerFindOne.PATH = '/amims/mpc_gse/mpc_gse/{id}';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXBjLWdzZS1jb250cm9sbGVyLWZpbmQtb25lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2RrY29yZS9zcmMvbGliL2ZuL21wYy1nc2UvbXBjLWdzZS1jb250cm9sbGVyLWZpbmQtb25lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsbURBQW1EO0FBRW5ELE9BQU8sRUFBMkIsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFN0UsT0FBTyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFRdkQsTUFBTSxVQUFVLHVCQUF1QixDQUFDLElBQWdCLEVBQUUsT0FBZSxFQUFFLE1BQXNDLEVBQUUsT0FBcUI7SUFLdEksTUFBTSxFQUFFLEdBQUcsSUFBSSxjQUFjLENBQUMsT0FBTyxFQUFFLHVCQUF1QixDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM1RSxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ1gsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUNqQixFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FDeEUsQ0FBQyxJQUFJLENBQ0osTUFBTSxDQUFDLENBQUMsQ0FBTSxFQUEwQixFQUFFLENBQUMsQ0FBQyxZQUFZLFlBQVksQ0FBQyxFQUNyRSxHQUFHLENBQUMsQ0FBQyxDQUFvQixFQUFFLEVBQUU7UUFDM0IsT0FBTyxDQUlMLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FDSCxDQUFDO0FBQ0osQ0FBQztBQUVELHVCQUF1QixDQUFDLElBQUksR0FBRyw2QkFBNkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogQ29kZSBnZW5lcmF0ZWQgYnkgbmctb3BlbmFwaS1nZW4gRE8gTk9UIEVESVQuICovXG5cbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBDb250ZXh0LCBIdHRwUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFN0cmljdEh0dHBSZXNwb25zZSB9IGZyb20gJy4uLy4uL3N0cmljdC1odHRwLXJlc3BvbnNlJztcbmltcG9ydCB7IFJlcXVlc3RCdWlsZGVyIH0gZnJvbSAnLi4vLi4vcmVxdWVzdC1idWlsZGVyJztcblxuaW1wb3J0IHsgQW1pbXNNcGNHc2VEdG8gfSBmcm9tICcuLi8uLi9tb2RlbHMvYW1pbXMtbXBjLWdzZS1kdG8nO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1wY0dzZUNvbnRyb2xsZXJGaW5kT25lJFBhcmFtcyB7XG4gIGlkOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtcGNHc2VDb250cm9sbGVyRmluZE9uZShodHRwOiBIdHRwQ2xpZW50LCByb290VXJsOiBzdHJpbmcsIHBhcmFtczogTXBjR3NlQ29udHJvbGxlckZpbmRPbmUkUGFyYW1zLCBjb250ZXh0PzogSHR0cENvbnRleHQpOiBPYnNlcnZhYmxlPFN0cmljdEh0dHBSZXNwb25zZTx7XG4nY29kZSc/OiBudW1iZXI7XG4ncGVzYW4nPzogc3RyaW5nO1xuJ2RhdGEnPzogQW1pbXNNcGNHc2VEdG87XG59Pj4ge1xuICBjb25zdCByYiA9IG5ldyBSZXF1ZXN0QnVpbGRlcihyb290VXJsLCBtcGNHc2VDb250cm9sbGVyRmluZE9uZS5QQVRILCAnZ2V0Jyk7XG4gIGlmIChwYXJhbXMpIHtcbiAgICByYi5wYXRoKCdpZCcsIHBhcmFtcy5pZCwge30pO1xuICB9XG5cbiAgcmV0dXJuIGh0dHAucmVxdWVzdChcbiAgICByYi5idWlsZCh7IHJlc3BvbnNlVHlwZTogJ2pzb24nLCBhY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJywgY29udGV4dCB9KVxuICApLnBpcGUoXG4gICAgZmlsdGVyKChyOiBhbnkpOiByIGlzIEh0dHBSZXNwb25zZTxhbnk+ID0+IHIgaW5zdGFuY2VvZiBIdHRwUmVzcG9uc2UpLFxuICAgIG1hcCgocjogSHR0cFJlc3BvbnNlPGFueT4pID0+IHtcbiAgICAgIHJldHVybiByIGFzIFN0cmljdEh0dHBSZXNwb25zZTx7XG4gICAgICAnY29kZSc/OiBudW1iZXI7XG4gICAgICAncGVzYW4nPzogc3RyaW5nO1xuICAgICAgJ2RhdGEnPzogQW1pbXNNcGNHc2VEdG87XG4gICAgICB9PjtcbiAgICB9KVxuICApO1xufVxuXG5tcGNHc2VDb250cm9sbGVyRmluZE9uZS5QQVRIID0gJy9hbWltcy9tcGNfZ3NlL21wY19nc2Uve2lkfSc7XG4iXX0=