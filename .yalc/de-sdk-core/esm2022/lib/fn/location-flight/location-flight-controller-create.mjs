/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function locationFlightControllerCreate(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, locationFlightControllerCreate.PATH, 'post');
    if (params) {
        rb.body(params.body, 'application/json');
    }
    return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r;
    }));
}
locationFlightControllerCreate.PATH = '/amims/location_flight/location_flight';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYXRpb24tZmxpZ2h0LWNvbnRyb2xsZXItY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2RrY29yZS9zcmMvbGliL2ZuL2xvY2F0aW9uLWZsaWdodC9sb2NhdGlvbi1mbGlnaHQtY29udHJvbGxlci1jcmVhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixtREFBbUQ7QUFFbkQsT0FBTyxFQUEyQixZQUFZLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUU3RSxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQVF2RCxNQUFNLFVBQVUsOEJBQThCLENBQUMsSUFBZ0IsRUFBRSxPQUFlLEVBQUUsTUFBNkMsRUFBRSxPQUFxQjtJQUtwSixNQUFNLEVBQUUsR0FBRyxJQUFJLGNBQWMsQ0FBQyxPQUFPLEVBQUUsOEJBQThCLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3BGLElBQUksTUFBTSxFQUFFLENBQUM7UUFDWCxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUNqQixFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FDeEUsQ0FBQyxJQUFJLENBQ0osTUFBTSxDQUFDLENBQUMsQ0FBTSxFQUEwQixFQUFFLENBQUMsQ0FBQyxZQUFZLFlBQVksQ0FBQyxFQUNyRSxHQUFHLENBQUMsQ0FBQyxDQUFvQixFQUFFLEVBQUU7UUFDM0IsT0FBTyxDQUlMLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FDSCxDQUFDO0FBQ0osQ0FBQztBQUVELDhCQUE4QixDQUFDLElBQUksR0FBRyx3Q0FBd0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogQ29kZSBnZW5lcmF0ZWQgYnkgbmctb3BlbmFwaS1nZW4gRE8gTk9UIEVESVQuICovXG5cbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBDb250ZXh0LCBIdHRwUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFN0cmljdEh0dHBSZXNwb25zZSB9IGZyb20gJy4uLy4uL3N0cmljdC1odHRwLXJlc3BvbnNlJztcbmltcG9ydCB7IFJlcXVlc3RCdWlsZGVyIH0gZnJvbSAnLi4vLi4vcmVxdWVzdC1idWlsZGVyJztcblxuaW1wb3J0IHsgQW1pbXNMb2NhdGlvbkZsaWdodER0byB9IGZyb20gJy4uLy4uL21vZGVscy9hbWltcy1sb2NhdGlvbi1mbGlnaHQtZHRvJztcblxuZXhwb3J0IGludGVyZmFjZSBMb2NhdGlvbkZsaWdodENvbnRyb2xsZXJDcmVhdGUkUGFyYW1zIHtcbiAgICAgIGJvZHk6IEFtaW1zTG9jYXRpb25GbGlnaHREdG9cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvY2F0aW9uRmxpZ2h0Q29udHJvbGxlckNyZWF0ZShodHRwOiBIdHRwQ2xpZW50LCByb290VXJsOiBzdHJpbmcsIHBhcmFtczogTG9jYXRpb25GbGlnaHRDb250cm9sbGVyQ3JlYXRlJFBhcmFtcywgY29udGV4dD86IEh0dHBDb250ZXh0KTogT2JzZXJ2YWJsZTxTdHJpY3RIdHRwUmVzcG9uc2U8e1xuJ2NvZGUnPzogbnVtYmVyO1xuJ3Blc2FuJz86IHN0cmluZztcbidkYXRhJz86IEFtaW1zTG9jYXRpb25GbGlnaHREdG87XG59Pj4ge1xuICBjb25zdCByYiA9IG5ldyBSZXF1ZXN0QnVpbGRlcihyb290VXJsLCBsb2NhdGlvbkZsaWdodENvbnRyb2xsZXJDcmVhdGUuUEFUSCwgJ3Bvc3QnKTtcbiAgaWYgKHBhcmFtcykge1xuICAgIHJiLmJvZHkocGFyYW1zLmJvZHksICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gIH1cblxuICByZXR1cm4gaHR0cC5yZXF1ZXN0KFxuICAgIHJiLmJ1aWxkKHsgcmVzcG9uc2VUeXBlOiAnanNvbicsIGFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLCBjb250ZXh0IH0pXG4gICkucGlwZShcbiAgICBmaWx0ZXIoKHI6IGFueSk6IHIgaXMgSHR0cFJlc3BvbnNlPGFueT4gPT4gciBpbnN0YW5jZW9mIEh0dHBSZXNwb25zZSksXG4gICAgbWFwKChyOiBIdHRwUmVzcG9uc2U8YW55PikgPT4ge1xuICAgICAgcmV0dXJuIHIgYXMgU3RyaWN0SHR0cFJlc3BvbnNlPHtcbiAgICAgICdjb2RlJz86IG51bWJlcjtcbiAgICAgICdwZXNhbic/OiBzdHJpbmc7XG4gICAgICAnZGF0YSc/OiBBbWltc0xvY2F0aW9uRmxpZ2h0RHRvO1xuICAgICAgfT47XG4gICAgfSlcbiAgKTtcbn1cblxubG9jYXRpb25GbGlnaHRDb250cm9sbGVyQ3JlYXRlLlBBVEggPSAnL2FtaW1zL2xvY2F0aW9uX2ZsaWdodC9sb2NhdGlvbl9mbGlnaHQnO1xuIl19