/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */
import { HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
import { RequestBuilder } from '../../request-builder';
export function mpcJoOperatorControllerCreate(http, rootUrl, params, context) {
    const rb = new RequestBuilder(rootUrl, mpcJoOperatorControllerCreate.PATH, 'post');
    if (params) {
        rb.body(params.body, 'application/json');
    }
    return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(filter((r) => r instanceof HttpResponse), map((r) => {
        return r;
    }));
}
mpcJoOperatorControllerCreate.PATH = '/amims/mpc_jo_operator/mpc_jo_operator';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXBjLWpvLW9wZXJhdG9yLWNvbnRyb2xsZXItY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2RrY29yZS9zcmMvbGliL2ZuL21wYy1qby1vcGVyYXRvci9tcGMtam8tb3BlcmF0b3ItY29udHJvbGxlci1jcmVhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixtREFBbUQ7QUFFbkQsT0FBTyxFQUEyQixZQUFZLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUU3RSxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQVF2RCxNQUFNLFVBQVUsNkJBQTZCLENBQUMsSUFBZ0IsRUFBRSxPQUFlLEVBQUUsTUFBNEMsRUFBRSxPQUFxQjtJQUtsSixNQUFNLEVBQUUsR0FBRyxJQUFJLGNBQWMsQ0FBQyxPQUFPLEVBQUUsNkJBQTZCLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ25GLElBQUksTUFBTSxFQUFFLENBQUM7UUFDWCxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUNqQixFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FDeEUsQ0FBQyxJQUFJLENBQ0osTUFBTSxDQUFDLENBQUMsQ0FBTSxFQUEwQixFQUFFLENBQUMsQ0FBQyxZQUFZLFlBQVksQ0FBQyxFQUNyRSxHQUFHLENBQUMsQ0FBQyxDQUFvQixFQUFFLEVBQUU7UUFDM0IsT0FBTyxDQUlMLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FDSCxDQUFDO0FBQ0osQ0FBQztBQUVELDZCQUE2QixDQUFDLElBQUksR0FBRyx3Q0FBd0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogQ29kZSBnZW5lcmF0ZWQgYnkgbmctb3BlbmFwaS1nZW4gRE8gTk9UIEVESVQuICovXG5cbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBDb250ZXh0LCBIdHRwUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFN0cmljdEh0dHBSZXNwb25zZSB9IGZyb20gJy4uLy4uL3N0cmljdC1odHRwLXJlc3BvbnNlJztcbmltcG9ydCB7IFJlcXVlc3RCdWlsZGVyIH0gZnJvbSAnLi4vLi4vcmVxdWVzdC1idWlsZGVyJztcblxuaW1wb3J0IHsgQW1pbXNNcGNKb09wZXJhdG9yRHRvIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2FtaW1zLW1wYy1qby1vcGVyYXRvci1kdG8nO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1wY0pvT3BlcmF0b3JDb250cm9sbGVyQ3JlYXRlJFBhcmFtcyB7XG4gICAgICBib2R5OiBBbWltc01wY0pvT3BlcmF0b3JEdG9cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1wY0pvT3BlcmF0b3JDb250cm9sbGVyQ3JlYXRlKGh0dHA6IEh0dHBDbGllbnQsIHJvb3RVcmw6IHN0cmluZywgcGFyYW1zOiBNcGNKb09wZXJhdG9yQ29udHJvbGxlckNyZWF0ZSRQYXJhbXMsIGNvbnRleHQ/OiBIdHRwQ29udGV4dCk6IE9ic2VydmFibGU8U3RyaWN0SHR0cFJlc3BvbnNlPHtcbidjb2RlJz86IG51bWJlcjtcbidwZXNhbic/OiBzdHJpbmc7XG4nZGF0YSc/OiBBbWltc01wY0pvT3BlcmF0b3JEdG87XG59Pj4ge1xuICBjb25zdCByYiA9IG5ldyBSZXF1ZXN0QnVpbGRlcihyb290VXJsLCBtcGNKb09wZXJhdG9yQ29udHJvbGxlckNyZWF0ZS5QQVRILCAncG9zdCcpO1xuICBpZiAocGFyYW1zKSB7XG4gICAgcmIuYm9keShwYXJhbXMuYm9keSwgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAgfVxuXG4gIHJldHVybiBodHRwLnJlcXVlc3QoXG4gICAgcmIuYnVpbGQoeyByZXNwb25zZVR5cGU6ICdqc29uJywgYWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsIGNvbnRleHQgfSlcbiAgKS5waXBlKFxuICAgIGZpbHRlcigocjogYW55KTogciBpcyBIdHRwUmVzcG9uc2U8YW55PiA9PiByIGluc3RhbmNlb2YgSHR0cFJlc3BvbnNlKSxcbiAgICBtYXAoKHI6IEh0dHBSZXNwb25zZTxhbnk+KSA9PiB7XG4gICAgICByZXR1cm4gciBhcyBTdHJpY3RIdHRwUmVzcG9uc2U8e1xuICAgICAgJ2NvZGUnPzogbnVtYmVyO1xuICAgICAgJ3Blc2FuJz86IHN0cmluZztcbiAgICAgICdkYXRhJz86IEFtaW1zTXBjSm9PcGVyYXRvckR0bztcbiAgICAgIH0+O1xuICAgIH0pXG4gICk7XG59XG5cbm1wY0pvT3BlcmF0b3JDb250cm9sbGVyQ3JlYXRlLlBBVEggPSAnL2FtaW1zL21wY19qb19vcGVyYXRvci9tcGNfam9fb3BlcmF0b3InO1xuIl19