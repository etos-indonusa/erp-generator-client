/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { AmimsInternalGrnItemDto } from '../models/amims-internal-grn-item-dto';
import { internalGrnItemControllerCreate } from '../fn/internal-grn-item/internal-grn-item-controller-create';
import { InternalGrnItemControllerCreate$Params } from '../fn/internal-grn-item/internal-grn-item-controller-create';
import { internalGrnItemControllerFindAll } from '../fn/internal-grn-item/internal-grn-item-controller-find-all';
import { InternalGrnItemControllerFindAll$Params } from '../fn/internal-grn-item/internal-grn-item-controller-find-all';
import { internalGrnItemControllerFindOne } from '../fn/internal-grn-item/internal-grn-item-controller-find-one';
import { InternalGrnItemControllerFindOne$Params } from '../fn/internal-grn-item/internal-grn-item-controller-find-one';
import { internalGrnItemControllerRemove } from '../fn/internal-grn-item/internal-grn-item-controller-remove';
import { InternalGrnItemControllerRemove$Params } from '../fn/internal-grn-item/internal-grn-item-controller-remove';
import { internalGrnItemControllerUpdate } from '../fn/internal-grn-item/internal-grn-item-controller-update';
import { InternalGrnItemControllerUpdate$Params } from '../fn/internal-grn-item/internal-grn-item-controller-update';

@Injectable({ providedIn: 'root' })
export class InternalGrnItemService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `internalGrnItemControllerFindAll()` */
  static readonly InternalGrnItemControllerFindAllPath = '/amims/internal_grn_item/internal_grn_item';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `internalGrnItemControllerFindAll()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnItemControllerFindAll$Response(params?: InternalGrnItemControllerFindAll$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsInternalGrnItemDto>;
'total'?: number;
}>> {
    return internalGrnItemControllerFindAll(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `internalGrnItemControllerFindAll$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnItemControllerFindAll(params?: InternalGrnItemControllerFindAll$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsInternalGrnItemDto>;
'total'?: number;
}> {
    return this.internalGrnItemControllerFindAll$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsInternalGrnItemDto>;
'total'?: number;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsInternalGrnItemDto>;
'total'?: number;
} => r.body)
    );
  }

  /** Path part for operation `internalGrnItemControllerCreate()` */
  static readonly InternalGrnItemControllerCreatePath = '/amims/internal_grn_item/internal_grn_item';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `internalGrnItemControllerCreate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  internalGrnItemControllerCreate$Response(params: InternalGrnItemControllerCreate$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}>> {
    return internalGrnItemControllerCreate(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `internalGrnItemControllerCreate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  internalGrnItemControllerCreate(params: InternalGrnItemControllerCreate$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}> {
    return this.internalGrnItemControllerCreate$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
} => r.body)
    );
  }

  /** Path part for operation `internalGrnItemControllerFindOne()` */
  static readonly InternalGrnItemControllerFindOnePath = '/amims/internal_grn_item/internal_grn_item/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `internalGrnItemControllerFindOne()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnItemControllerFindOne$Response(params: InternalGrnItemControllerFindOne$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}>> {
    return internalGrnItemControllerFindOne(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `internalGrnItemControllerFindOne$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnItemControllerFindOne(params: InternalGrnItemControllerFindOne$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}> {
    return this.internalGrnItemControllerFindOne$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
} => r.body)
    );
  }

  /** Path part for operation `internalGrnItemControllerUpdate()` */
  static readonly InternalGrnItemControllerUpdatePath = '/amims/internal_grn_item/internal_grn_item/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `internalGrnItemControllerUpdate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  internalGrnItemControllerUpdate$Response(params: InternalGrnItemControllerUpdate$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}>> {
    return internalGrnItemControllerUpdate(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `internalGrnItemControllerUpdate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  internalGrnItemControllerUpdate(params: InternalGrnItemControllerUpdate$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}> {
    return this.internalGrnItemControllerUpdate$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
} => r.body)
    );
  }

  /** Path part for operation `internalGrnItemControllerRemove()` */
  static readonly InternalGrnItemControllerRemovePath = '/amims/internal_grn_item/internal_grn_item/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `internalGrnItemControllerRemove()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnItemControllerRemove$Response(params: InternalGrnItemControllerRemove$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}>> {
    return internalGrnItemControllerRemove(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `internalGrnItemControllerRemove$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnItemControllerRemove(params: InternalGrnItemControllerRemove$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}> {
    return this.internalGrnItemControllerRemove$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnItemDto;
} => r.body)
    );
  }

}
