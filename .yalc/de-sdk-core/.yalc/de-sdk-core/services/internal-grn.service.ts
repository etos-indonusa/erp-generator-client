/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { AmimsInternalGrnDto } from '../models/amims-internal-grn-dto';
import { internalGrnControllerCreate } from '../fn/internal-grn/internal-grn-controller-create';
import { InternalGrnControllerCreate$Params } from '../fn/internal-grn/internal-grn-controller-create';
import { internalGrnControllerFindAll } from '../fn/internal-grn/internal-grn-controller-find-all';
import { InternalGrnControllerFindAll$Params } from '../fn/internal-grn/internal-grn-controller-find-all';
import { internalGrnControllerFindOne } from '../fn/internal-grn/internal-grn-controller-find-one';
import { InternalGrnControllerFindOne$Params } from '../fn/internal-grn/internal-grn-controller-find-one';
import { internalGrnControllerRemove } from '../fn/internal-grn/internal-grn-controller-remove';
import { InternalGrnControllerRemove$Params } from '../fn/internal-grn/internal-grn-controller-remove';
import { internalGrnControllerUpdate } from '../fn/internal-grn/internal-grn-controller-update';
import { InternalGrnControllerUpdate$Params } from '../fn/internal-grn/internal-grn-controller-update';

@Injectable({ providedIn: 'root' })
export class InternalGrnService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `internalGrnControllerFindAll()` */
  static readonly InternalGrnControllerFindAllPath = '/amims/internal_grn/internal_grn';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `internalGrnControllerFindAll()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnControllerFindAll$Response(params?: InternalGrnControllerFindAll$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsInternalGrnDto>;
'total'?: number;
}>> {
    return internalGrnControllerFindAll(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `internalGrnControllerFindAll$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnControllerFindAll(params?: InternalGrnControllerFindAll$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsInternalGrnDto>;
'total'?: number;
}> {
    return this.internalGrnControllerFindAll$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsInternalGrnDto>;
'total'?: number;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsInternalGrnDto>;
'total'?: number;
} => r.body)
    );
  }

  /** Path part for operation `internalGrnControllerCreate()` */
  static readonly InternalGrnControllerCreatePath = '/amims/internal_grn/internal_grn';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `internalGrnControllerCreate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  internalGrnControllerCreate$Response(params: InternalGrnControllerCreate$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}>> {
    return internalGrnControllerCreate(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `internalGrnControllerCreate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  internalGrnControllerCreate(params: InternalGrnControllerCreate$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}> {
    return this.internalGrnControllerCreate$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
} => r.body)
    );
  }

  /** Path part for operation `internalGrnControllerFindOne()` */
  static readonly InternalGrnControllerFindOnePath = '/amims/internal_grn/internal_grn/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `internalGrnControllerFindOne()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnControllerFindOne$Response(params: InternalGrnControllerFindOne$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}>> {
    return internalGrnControllerFindOne(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `internalGrnControllerFindOne$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnControllerFindOne(params: InternalGrnControllerFindOne$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}> {
    return this.internalGrnControllerFindOne$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
} => r.body)
    );
  }

  /** Path part for operation `internalGrnControllerUpdate()` */
  static readonly InternalGrnControllerUpdatePath = '/amims/internal_grn/internal_grn/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `internalGrnControllerUpdate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  internalGrnControllerUpdate$Response(params: InternalGrnControllerUpdate$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}>> {
    return internalGrnControllerUpdate(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `internalGrnControllerUpdate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  internalGrnControllerUpdate(params: InternalGrnControllerUpdate$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}> {
    return this.internalGrnControllerUpdate$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
} => r.body)
    );
  }

  /** Path part for operation `internalGrnControllerRemove()` */
  static readonly InternalGrnControllerRemovePath = '/amims/internal_grn/internal_grn/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `internalGrnControllerRemove()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnControllerRemove$Response(params: InternalGrnControllerRemove$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}>> {
    return internalGrnControllerRemove(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `internalGrnControllerRemove$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  internalGrnControllerRemove(params: InternalGrnControllerRemove$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}> {
    return this.internalGrnControllerRemove$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsInternalGrnDto;
} => r.body)
    );
  }

}
