/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { AmimsEngineerPrisReturnItemDto } from '../models/amims-engineer-pris-return-item-dto';
import { engineerPrisReturnItemControllerCreate } from '../fn/engineer-pris-return-item/engineer-pris-return-item-controller-create';
import { EngineerPrisReturnItemControllerCreate$Params } from '../fn/engineer-pris-return-item/engineer-pris-return-item-controller-create';
import { engineerPrisReturnItemControllerFindAll } from '../fn/engineer-pris-return-item/engineer-pris-return-item-controller-find-all';
import { EngineerPrisReturnItemControllerFindAll$Params } from '../fn/engineer-pris-return-item/engineer-pris-return-item-controller-find-all';
import { engineerPrisReturnItemControllerFindOne } from '../fn/engineer-pris-return-item/engineer-pris-return-item-controller-find-one';
import { EngineerPrisReturnItemControllerFindOne$Params } from '../fn/engineer-pris-return-item/engineer-pris-return-item-controller-find-one';
import { engineerPrisReturnItemControllerRemove } from '../fn/engineer-pris-return-item/engineer-pris-return-item-controller-remove';
import { EngineerPrisReturnItemControllerRemove$Params } from '../fn/engineer-pris-return-item/engineer-pris-return-item-controller-remove';
import { engineerPrisReturnItemControllerUpdate } from '../fn/engineer-pris-return-item/engineer-pris-return-item-controller-update';
import { EngineerPrisReturnItemControllerUpdate$Params } from '../fn/engineer-pris-return-item/engineer-pris-return-item-controller-update';

@Injectable({ providedIn: 'root' })
export class EngineerPrisReturnItemService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `engineerPrisReturnItemControllerFindAll()` */
  static readonly EngineerPrisReturnItemControllerFindAllPath = '/amims/engineer_pris_return_item/engineer_pris_return_item';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `engineerPrisReturnItemControllerFindAll()` instead.
   *
   * This method doesn't expect any request body.
   */
  engineerPrisReturnItemControllerFindAll$Response(params?: EngineerPrisReturnItemControllerFindAll$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsEngineerPrisReturnItemDto>;
'total'?: number;
}>> {
    return engineerPrisReturnItemControllerFindAll(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `engineerPrisReturnItemControllerFindAll$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  engineerPrisReturnItemControllerFindAll(params?: EngineerPrisReturnItemControllerFindAll$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsEngineerPrisReturnItemDto>;
'total'?: number;
}> {
    return this.engineerPrisReturnItemControllerFindAll$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsEngineerPrisReturnItemDto>;
'total'?: number;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsEngineerPrisReturnItemDto>;
'total'?: number;
} => r.body)
    );
  }

  /** Path part for operation `engineerPrisReturnItemControllerCreate()` */
  static readonly EngineerPrisReturnItemControllerCreatePath = '/amims/engineer_pris_return_item/engineer_pris_return_item';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `engineerPrisReturnItemControllerCreate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  engineerPrisReturnItemControllerCreate$Response(params: EngineerPrisReturnItemControllerCreate$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}>> {
    return engineerPrisReturnItemControllerCreate(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `engineerPrisReturnItemControllerCreate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  engineerPrisReturnItemControllerCreate(params: EngineerPrisReturnItemControllerCreate$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}> {
    return this.engineerPrisReturnItemControllerCreate$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
} => r.body)
    );
  }

  /** Path part for operation `engineerPrisReturnItemControllerFindOne()` */
  static readonly EngineerPrisReturnItemControllerFindOnePath = '/amims/engineer_pris_return_item/engineer_pris_return_item/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `engineerPrisReturnItemControllerFindOne()` instead.
   *
   * This method doesn't expect any request body.
   */
  engineerPrisReturnItemControllerFindOne$Response(params: EngineerPrisReturnItemControllerFindOne$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}>> {
    return engineerPrisReturnItemControllerFindOne(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `engineerPrisReturnItemControllerFindOne$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  engineerPrisReturnItemControllerFindOne(params: EngineerPrisReturnItemControllerFindOne$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}> {
    return this.engineerPrisReturnItemControllerFindOne$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
} => r.body)
    );
  }

  /** Path part for operation `engineerPrisReturnItemControllerUpdate()` */
  static readonly EngineerPrisReturnItemControllerUpdatePath = '/amims/engineer_pris_return_item/engineer_pris_return_item/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `engineerPrisReturnItemControllerUpdate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  engineerPrisReturnItemControllerUpdate$Response(params: EngineerPrisReturnItemControllerUpdate$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}>> {
    return engineerPrisReturnItemControllerUpdate(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `engineerPrisReturnItemControllerUpdate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  engineerPrisReturnItemControllerUpdate(params: EngineerPrisReturnItemControllerUpdate$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}> {
    return this.engineerPrisReturnItemControllerUpdate$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
} => r.body)
    );
  }

  /** Path part for operation `engineerPrisReturnItemControllerRemove()` */
  static readonly EngineerPrisReturnItemControllerRemovePath = '/amims/engineer_pris_return_item/engineer_pris_return_item/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `engineerPrisReturnItemControllerRemove()` instead.
   *
   * This method doesn't expect any request body.
   */
  engineerPrisReturnItemControllerRemove$Response(params: EngineerPrisReturnItemControllerRemove$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}>> {
    return engineerPrisReturnItemControllerRemove(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `engineerPrisReturnItemControllerRemove$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  engineerPrisReturnItemControllerRemove(params: EngineerPrisReturnItemControllerRemove$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}> {
    return this.engineerPrisReturnItemControllerRemove$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsEngineerPrisReturnItemDto;
} => r.body)
    );
  }

}
