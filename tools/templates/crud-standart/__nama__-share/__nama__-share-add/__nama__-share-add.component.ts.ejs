import { Component, Input, SimpleChanges } from '@angular/core';
import { FormGroup, FormBuilder, Validators } from '@angular/forms';
import { NzDrawerRef } from 'ng-zorro-antd/drawer';
import { NzNotificationService } from 'ng-zorro-antd/notification';
import { generateFormFromSchema } from 'src/app/helpers/form-generator';
import { extractLabels, showFormValidationWarnings } from 'src/app/helpers/form-validation-notifier';
import { <%= Nama %>FormSchema } from 'src/sdk/core/form-schema/<%= nama %>.form-schema'; 
import type  { <%= Nama %>Dto } from 'src/sdk/core/models';
import { <%= Nama %>Service } from 'src/sdk/core/services';

@Component({
    selector: 'app-<%= nama %>-share-add',
    templateUrl: './<%= nama %>-share-add.component.html',
    styleUrl: './<%= nama %>-share-add.component.scss'
})
export class <%= Nama %>ShareAddComponent {
    @Input('<%= nama %>') <%= nama %>: <%= Nama %>Dto = <%- dtoDefaultObject %>;
    form!: FormGroup;

    ngOnChanges(changes: SimpleChanges): void {
        if (changes.<%= nama %> && this.<%= nama %>.id<%= Nama %>) {
            this.form?.patchValue(this.<%= nama %>);
        }
    }
    constructor(
        private fb: FormBuilder,
        private notify: NzNotificationService,
        private nzDrawerRef: NzDrawerRef<string>,
        private <%= nama %>Service: <%= Nama %>Service
    ) { }

    ngOnInit(): void {
        this.form = generateFormFromSchema(this.fb, <%= Nama %>FormSchema, {
            kode<%= Nama %>: [Validators.minLength(3), Validators.maxLength(3)],
            catatan: [Validators.maxLength(200)],
        });
    }
    <% relationVars.forEach(rv => { %>
    <%= rv %>
    <% }) %>

    submit(): void {
        const labelMap = extractLabels(<%= Nama %>FormSchema);

        if (showFormValidationWarnings(this.form, this.notify, labelMap)) {
            return;
        }
        this.<%= nama %>.id<%= Nama %> ? this.update() : this.simpan();

        // lanjut simpan
    }
    is_loading = false
    simpan() {
        this.is_loading = true;
        this.<%= nama %>Service.<%= nama %>ControllerCreate({ body: this.form.value }).subscribe({
            next: (data) => {
                this.notify.success('Berhasil', 'Data <%= nama %> berhasil disimpan.');
                this.nzDrawerRef.close(data);
            },
            error: () => {
                this.notify.error('Gagal', 'Terjadi kesalahan saat menyimpan.');
            },
            complete: () => (this.is_loading = false)
        });
    }

    update() {
        this.is_loading = true;
        this.<%= nama %>Service.<%= nama %>ControllerUpdate({ id: this.<%= nama %>.id<%= Nama %>, body: this.form.value }).subscribe({
            next: (data) => {
                this.notify.success('Berhasil', 'Data <%= nama %> berhasil diperbarui.');
                this.nzDrawerRef.close(data);
            },
            error: () => {
                this.notify.error('Gagal', 'Terjadi kesalahan saat memperbarui.');
            },
            complete: () => (this.is_loading = false)
        });
    }

    goToBack(data = null) {
        this.nzDrawerRef.close(data);
    }
}
