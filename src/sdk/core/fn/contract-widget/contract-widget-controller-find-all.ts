/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { BaseWidgetQueryDto } from '../../models/base-widget-query-dto';
import { ContractWidgetReportDto } from '../../models/contract-widget-report-dto';

export interface ContractWidgetControllerFindAll$Params {

/**
 * Filter JSON
 */
  filter?: string;

/**
 * JoinWhere JSON
 */
  joinWhere?: string;

/**
 * Group by fields (JSON Array)
 */
  groupBy?: string;

/**
 * Select fields (JSON Array)
 */
  select?: string;
  sortKey?: string;
  sortValue?: 'ASC' | 'DESC';
      body: BaseWidgetQueryDto
}

export function contractWidgetControllerFindAll(http: HttpClient, rootUrl: string, params: ContractWidgetControllerFindAll$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<ContractWidgetReportDto>;
'total'?: number;
}>> {
  const rb = new RequestBuilder(rootUrl, contractWidgetControllerFindAll.PATH, 'get');
  if (params) {
    rb.query('filter', params.filter, {});
    rb.query('joinWhere', params.joinWhere, {});
    rb.query('groupBy', params.groupBy, {});
    rb.query('select', params.select, {});
    rb.query('sortKey', params.sortKey, {});
    rb.query('sortValue', params.sortValue, {});
    rb.body(params.body, 'application/json');
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<{
      'code'?: number;
      'pesan'?: string;
      'data'?: Array<ContractWidgetReportDto>;
      'total'?: number;
      }>;
    })
  );
}

contractWidgetControllerFindAll.PATH = '/nonauth/contract/contract_widget';
