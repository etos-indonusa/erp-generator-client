/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { AmimsVDueListOutputDto } from '../models/amims-v-due-list-output-dto';
import { vDueListOutputControllerCreate } from '../fn/v-due-list-output/v-due-list-output-controller-create';
import { VDueListOutputControllerCreate$Params } from '../fn/v-due-list-output/v-due-list-output-controller-create';
import { vDueListOutputControllerFindAll } from '../fn/v-due-list-output/v-due-list-output-controller-find-all';
import { VDueListOutputControllerFindAll$Params } from '../fn/v-due-list-output/v-due-list-output-controller-find-all';
import { vDueListOutputControllerFindOne } from '../fn/v-due-list-output/v-due-list-output-controller-find-one';
import { VDueListOutputControllerFindOne$Params } from '../fn/v-due-list-output/v-due-list-output-controller-find-one';
import { vDueListOutputControllerRemove } from '../fn/v-due-list-output/v-due-list-output-controller-remove';
import { VDueListOutputControllerRemove$Params } from '../fn/v-due-list-output/v-due-list-output-controller-remove';
import { vDueListOutputControllerUpdate } from '../fn/v-due-list-output/v-due-list-output-controller-update';
import { VDueListOutputControllerUpdate$Params } from '../fn/v-due-list-output/v-due-list-output-controller-update';

@Injectable({ providedIn: 'root' })
export class VDueListOutputService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `vDueListOutputControllerFindAll()` */
  static readonly VDueListOutputControllerFindAllPath = '/amims/v_due_list_output/v_due_list_output';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `vDueListOutputControllerFindAll()` instead.
   *
   * This method doesn't expect any request body.
   */
  vDueListOutputControllerFindAll$Response(params?: VDueListOutputControllerFindAll$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsVDueListOutputDto>;
'total'?: number;
}>> {
    return vDueListOutputControllerFindAll(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `vDueListOutputControllerFindAll$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  vDueListOutputControllerFindAll(params?: VDueListOutputControllerFindAll$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsVDueListOutputDto>;
'total'?: number;
}> {
    return this.vDueListOutputControllerFindAll$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsVDueListOutputDto>;
'total'?: number;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsVDueListOutputDto>;
'total'?: number;
} => r.body)
    );
  }

  /** Path part for operation `vDueListOutputControllerCreate()` */
  static readonly VDueListOutputControllerCreatePath = '/amims/v_due_list_output/v_due_list_output';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `vDueListOutputControllerCreate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  vDueListOutputControllerCreate$Response(params: VDueListOutputControllerCreate$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}>> {
    return vDueListOutputControllerCreate(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `vDueListOutputControllerCreate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  vDueListOutputControllerCreate(params: VDueListOutputControllerCreate$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}> {
    return this.vDueListOutputControllerCreate$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
} => r.body)
    );
  }

  /** Path part for operation `vDueListOutputControllerFindOne()` */
  static readonly VDueListOutputControllerFindOnePath = '/amims/v_due_list_output/v_due_list_output/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `vDueListOutputControllerFindOne()` instead.
   *
   * This method doesn't expect any request body.
   */
  vDueListOutputControllerFindOne$Response(params: VDueListOutputControllerFindOne$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}>> {
    return vDueListOutputControllerFindOne(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `vDueListOutputControllerFindOne$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  vDueListOutputControllerFindOne(params: VDueListOutputControllerFindOne$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}> {
    return this.vDueListOutputControllerFindOne$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
} => r.body)
    );
  }

  /** Path part for operation `vDueListOutputControllerUpdate()` */
  static readonly VDueListOutputControllerUpdatePath = '/amims/v_due_list_output/v_due_list_output/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `vDueListOutputControllerUpdate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  vDueListOutputControllerUpdate$Response(params: VDueListOutputControllerUpdate$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}>> {
    return vDueListOutputControllerUpdate(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `vDueListOutputControllerUpdate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  vDueListOutputControllerUpdate(params: VDueListOutputControllerUpdate$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}> {
    return this.vDueListOutputControllerUpdate$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
} => r.body)
    );
  }

  /** Path part for operation `vDueListOutputControllerRemove()` */
  static readonly VDueListOutputControllerRemovePath = '/amims/v_due_list_output/v_due_list_output/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `vDueListOutputControllerRemove()` instead.
   *
   * This method doesn't expect any request body.
   */
  vDueListOutputControllerRemove$Response(params: VDueListOutputControllerRemove$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}>> {
    return vDueListOutputControllerRemove(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `vDueListOutputControllerRemove$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  vDueListOutputControllerRemove(params: VDueListOutputControllerRemove$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}> {
    return this.vDueListOutputControllerRemove$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: AmimsVDueListOutputDto;
} => r.body)
    );
  }

}
