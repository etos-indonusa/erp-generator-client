/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { AmimsPartidWidgetDto } from '../models/amims-partid-widget-dto';
import { partidWidgetControllerFindAll } from '../fn/partid-widget/partid-widget-controller-find-all';
import { PartidWidgetControllerFindAll$Params } from '../fn/partid-widget/partid-widget-controller-find-all';

@Injectable({ providedIn: 'root' })
export class PartidWidgetService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `partidWidgetControllerFindAll()` */
  static readonly PartidWidgetControllerFindAllPath = '/amims/partid/partid_widget';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `partidWidgetControllerFindAll()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  partidWidgetControllerFindAll$Response(params: PartidWidgetControllerFindAll$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsPartidWidgetDto>;
'total'?: number;
}>> {
    return partidWidgetControllerFindAll(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `partidWidgetControllerFindAll$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  partidWidgetControllerFindAll(params: PartidWidgetControllerFindAll$Params, context?: HttpContext): Observable<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsPartidWidgetDto>;
'total'?: number;
}> {
    return this.partidWidgetControllerFindAll$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsPartidWidgetDto>;
'total'?: number;
}>): {
'code'?: number;
'pesan'?: string;
'data'?: Array<AmimsPartidWidgetDto>;
'total'?: number;
} => r.body)
    );
  }

}
